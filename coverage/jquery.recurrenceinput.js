/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['jquery.recurrenceinput.js']) {
  _$jscoverage['jquery.recurrenceinput.js'] = [];
  _$jscoverage['jquery.recurrenceinput.js'][5] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][6] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][8] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][9] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][11] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][85] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][89] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][90] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][91] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][92] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][93] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][94] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][95] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][104] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][178] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][216] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][220] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][222] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][223] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][224] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][225] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][226] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][229] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][231] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][249] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][250] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][253] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][260] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][261] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][262] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][263] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][264] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][265] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][266] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][268] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][269] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][271] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][274] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][275] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][276] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][277] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][280] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][281] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][282] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][283] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][286] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][287] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][288] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][289] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][290] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][291] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][292] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][293] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][295] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][296] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][299] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][300] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][301] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][303] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][306] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][307] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][310] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][311] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][312] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][313] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][314] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][315] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][316] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][318] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][320] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][321] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][322] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][323] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][324] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][325] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][326] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][327] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][328] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][330] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][331] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][332] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][334] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][336] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][339] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][340] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][343] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][344] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][345] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][346] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][347] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][348] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][350] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][351] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][352] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][353] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][354] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][355] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][356] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][357] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][358] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][359] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][360] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][361] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][362] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][364] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][366] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][369] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][370] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][373] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][374] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][375] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][376] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][377] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][378] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][380] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][381] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][382] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][383] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][385] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][387] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][388] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][389] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][391] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][395] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][396] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][397] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][398] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][399] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][400] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][401] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][402] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][405] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][406] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][410] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][411] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][412] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][413] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][414] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][415] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][416] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][417] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][420] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][421] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][424] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][425] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][426] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][428] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][429] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][431] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][434] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][435] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][436] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][437] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][438] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][440] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][441] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][442] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][443] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][445] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][446] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][448] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][451] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][454] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][455] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][456] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][458] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][459] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][460] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][461] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][463] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][467] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][470] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][471] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][472] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][473] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][474] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][475] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][477] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][478] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][479] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][480] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][481] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][482] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][484] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][485] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][488] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][492] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][493] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][495] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][496] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][498] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][502] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][503] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][504] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][507] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][510] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][511] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][512] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][513] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][514] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][515] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][517] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][519] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][520] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][521] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][523] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][526] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][527] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][528] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][530] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][533] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][534] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][535] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][537] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][540] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][541] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][542] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][544] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][547] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][548] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][549] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][551] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][554] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][555] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][556] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][558] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][561] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][562] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][563] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][565] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][569] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][570] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][571] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][572] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][573] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][574] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][575] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][577] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][578] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][584] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][585] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][587] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][589] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][590] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][591] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][592] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][595] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][598] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][599] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][600] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][603] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][604] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][607] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][608] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][611] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][612] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][613] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][614] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][616] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][619] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][621] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][622] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][623] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][625] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][627] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][629] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][630] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][633] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][634] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][636] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][638] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][639] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][641] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][642] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][643] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][644] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][645] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][648] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][649] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][650] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][651] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][653] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][656] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][658] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][659] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][660] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][662] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][663] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][665] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][666] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][669] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][670] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][672] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][674] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][675] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][677] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][678] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][679] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][680] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][681] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][684] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][685] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][686] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][687] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][689] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][692] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][694] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][695] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][696] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][699] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][700] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][701] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][702] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][703] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][704] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][705] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][707] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][708] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][709] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][712] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][713] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][714] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][715] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][717] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][721] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][722] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][730] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][732] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][733] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][736] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][743] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][744] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][746] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][748] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][749] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][750] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][751] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][752] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][757] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][758] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][759] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][760] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][761] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][762] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][765] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][766] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][767] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][768] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][769] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][770] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][773] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][774] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][775] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][776] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][777] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][782] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][783] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][785] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][786] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][789] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][790] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][792] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][795] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][796] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][799] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][811] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][813] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][814] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][816] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][818] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][819] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][820] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][821] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][824] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][826] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][827] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][832] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][833] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][834] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][835] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][838] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][841] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][846] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][847] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][849] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][851] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][852] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][854] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][858] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][859] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][861] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][864] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][866] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][868] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][869] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][871] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][873] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][877] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][878] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][880] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][882] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][884] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][885] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][886] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][887] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][888] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][890] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][891] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][892] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][893] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][894] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][897] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][900] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][902] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][903] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][912] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][913] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][915] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][919] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][920] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][923] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][924] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][925] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][926] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][927] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][928] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][929] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][930] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][934] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][935] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][936] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][937] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][938] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][941] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][942] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][943] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][944] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][946] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][950] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][951] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][953] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][955] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][957] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][960] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][961] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][963] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][971] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][972] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][976] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][979] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][982] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][984] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][987] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][988] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][992] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][995] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][998] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1000] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1002] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1004] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1007] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1012] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1013] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1014] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1022] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1025] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1028] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1029] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1030] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1035] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1037] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1042] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1044] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1051] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1052] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1058] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1071] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1072] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1074] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1078] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1079] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1080] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1083] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1085] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1086] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1088] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1089] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1095] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1098] = 0;
  _$jscoverage['jquery.recurrenceinput.js'][1099] = 0;
}
_$jscoverage['jquery.recurrenceinput.js'].source = ["","<span class=\"c\">/*jslint regexp: false, indent: 4 */</span>","<span class=\"c\">/*global $: false, alert: false, default_conf: false, jQuery: false */</span>","","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>$<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">.</span>tools <span class=\"k\">=</span> $<span class=\"k\">.</span>tools <span class=\"k\">||</span> <span class=\"k\">{</span>version<span class=\"k\">:</span> <span class=\"s\">'@VERSION'</span><span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"k\">var</span> tool<span class=\"k\">;</span>","    <span class=\"k\">var</span> LABELS <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    ","    tool <span class=\"k\">=</span> $<span class=\"k\">.</span>tools<span class=\"k\">.</span>recurrenceinput <span class=\"k\">=</span> <span class=\"k\">{</span>","        conf<span class=\"k\">:</span> <span class=\"k\">{</span>","        ","            lang<span class=\"k\">:</span> <span class=\"s\">'en'</span><span class=\"k\">,</span>","            readOnly<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","            ","            <span class=\"c\">// \"REMOTE\" FIELD</span>","            startField<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","            ajaxURL<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        ","            <span class=\"c\">// FORM OVERLAY</span>","            form_overlay<span class=\"k\">:</span> <span class=\"k\">{</span>","                speed<span class=\"k\">:</span> <span class=\"s\">'fast'</span><span class=\"k\">,</span>","                mask<span class=\"k\">:</span> <span class=\"k\">{</span>","                    color<span class=\"k\">:</span> <span class=\"s\">'#ebecff'</span><span class=\"k\">,</span>","                    loadSpeed<span class=\"k\">:</span> <span class=\"s\">'fast'</span><span class=\"k\">,</span>","                    closeSpeed<span class=\"k\">:</span> <span class=\"s\">'fast'</span><span class=\"k\">,</span>","                    opacity<span class=\"k\">:</span> <span class=\"s\">0.5</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","        ","            <span class=\"c\">// JQUERY TEMPLATE NAMES</span>","            template<span class=\"k\">:</span> <span class=\"k\">{</span>","                form<span class=\"k\">:</span> <span class=\"s\">'#jquery-recurrenceinput-form-tmpl'</span><span class=\"k\">,</span>","                display<span class=\"k\">:</span> <span class=\"s\">'#jquery-recurrenceinput-display-tmpl'</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","        ","            <span class=\"c\">// RECURRENCE TEMPLATES</span>","            rtemplate<span class=\"k\">:</span> <span class=\"k\">{</span>","                daily<span class=\"k\">:</span> <span class=\"k\">{</span>","                    rrule<span class=\"k\">:</span> <span class=\"s\">'FREQ=DAILY'</span><span class=\"k\">,</span>","                    fields<span class=\"k\">:</span> <span class=\"k\">[</span>","                        <span class=\"s\">'recurrenceinput_daily_interval'</span><span class=\"k\">,</span>","                        <span class=\"s\">'recurrenceinput_range_options'</span>","                    <span class=\"k\">]</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                mondayfriday<span class=\"k\">:</span> <span class=\"k\">{</span>","                    rrule<span class=\"k\">:</span> <span class=\"s\">'FREQ=WEEKLY;BYDAY=MO,FR'</span><span class=\"k\">,</span>","                    fields<span class=\"k\">:</span> <span class=\"k\">[</span>","                        <span class=\"s\">'recurrenceinput_range_options'</span>","                    <span class=\"k\">]</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                weekdays<span class=\"k\">:</span> <span class=\"k\">{</span>","                    rrule<span class=\"k\">:</span> <span class=\"s\">'FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR'</span><span class=\"k\">,</span>","                    fields<span class=\"k\">:</span> <span class=\"k\">[</span>","                        <span class=\"s\">'recurrenceinput_range_options'</span>","                    <span class=\"k\">]</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                weekly<span class=\"k\">:</span> <span class=\"k\">{</span>","                    rrule<span class=\"k\">:</span> <span class=\"s\">'FREQ=WEEKLY'</span><span class=\"k\">,</span>","                    fields<span class=\"k\">:</span> <span class=\"k\">[</span>","                        <span class=\"s\">'recurrenceinput_weekly_interval'</span><span class=\"k\">,</span>","                        <span class=\"s\">'recurrenceinput_weekly_weekdays'</span><span class=\"k\">,</span>","                        <span class=\"s\">'recurrenceinput_range_options'</span>","                    <span class=\"k\">]</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                monthly<span class=\"k\">:</span> <span class=\"k\">{</span>","                    rrule<span class=\"k\">:</span> <span class=\"s\">'FREQ=MONTHLY'</span><span class=\"k\">,</span>","                    fields<span class=\"k\">:</span> <span class=\"k\">[</span>","                        <span class=\"s\">'recurrenceinput_monthly_options'</span><span class=\"k\">,</span>","                        <span class=\"s\">'recurrenceinput_range_options'</span>","                    <span class=\"k\">]</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                yearly<span class=\"k\">:</span> <span class=\"k\">{</span>","                    rrule<span class=\"k\">:</span> <span class=\"s\">'FREQ=YEARLY'</span><span class=\"k\">,</span>","                    fields<span class=\"k\">:</span> <span class=\"k\">[</span>","                        <span class=\"s\">'recurrenceinput_yearly_options'</span><span class=\"k\">,</span>","                        <span class=\"s\">'recurrenceinput_range_options'</span>","                    <span class=\"k\">]</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        ","        localize<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>language<span class=\"k\">,</span> labels<span class=\"k\">)</span> <span class=\"k\">{</span>","            LABELS<span class=\"k\">[</span>language<span class=\"k\">]</span> <span class=\"k\">=</span> labels<span class=\"k\">;</span>        ","        <span class=\"k\">}</span><span class=\"k\">,</span>","        ","        setTemplates<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>templates<span class=\"k\">,</span> titles<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> lang<span class=\"k\">,</span> template<span class=\"k\">;</span>","            tool<span class=\"k\">.</span>conf<span class=\"k\">.</span>rtemplate <span class=\"k\">=</span> templates<span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span>lang <span class=\"k\">in</span> titles<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>titles<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>lang<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span>template <span class=\"k\">in</span> titles<span class=\"k\">[</span>lang<span class=\"k\">])</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>titles<span class=\"k\">[</span>lang<span class=\"k\">].</span>hasOwnProperty<span class=\"k\">(</span>template<span class=\"k\">))</span> <span class=\"k\">{</span>","                            LABELS<span class=\"k\">[</span>lang<span class=\"k\">].</span>rtemplate<span class=\"k\">[</span>template<span class=\"k\">]</span> <span class=\"k\">=</span> titles<span class=\"k\">[</span>lang<span class=\"k\">][</span>template<span class=\"k\">];</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        ","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    tool<span class=\"k\">.</span>localize<span class=\"k\">(</span><span class=\"s\">\"en\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        display_label_unactivate<span class=\"k\">:</span> <span class=\"s\">'Does not repeat'</span><span class=\"k\">,</span>","        display_label_activate<span class=\"k\">:</span> <span class=\"s\">'Repeats '</span><span class=\"k\">,</span>","        edit<span class=\"k\">:</span> <span class=\"s\">'Edit...'</span><span class=\"k\">,</span>","        ","        recurrence_type<span class=\"k\">:</span> <span class=\"s\">'Recurrence type:'</span><span class=\"k\">,</span>","","        daily_interval_1<span class=\"k\">:</span> <span class=\"s\">'Every'</span><span class=\"k\">,</span>","        daily_interval_2<span class=\"k\">:</span> <span class=\"s\">'days'</span><span class=\"k\">,</span>","","        weekly_interval_1<span class=\"k\">:</span> <span class=\"s\">'Every'</span><span class=\"k\">,</span>","        weekly_interval_2<span class=\"k\">:</span> <span class=\"s\">'week(s)'</span><span class=\"k\">,</span>","        weekly_weekdays<span class=\"k\">:</span> <span class=\"s\">'On:'</span><span class=\"k\">,</span>","","        monthly_day_of_month_1<span class=\"k\">:</span> <span class=\"s\">'Day'</span><span class=\"k\">,</span>","        monthly_day_of_month_2<span class=\"k\">:</span> <span class=\"s\">'of the month'</span><span class=\"k\">,</span>","        monthly_day_of_month_3<span class=\"k\">:</span> <span class=\"s\">', every'</span><span class=\"k\">,</span>","        monthly_day_of_month_4<span class=\"k\">:</span> <span class=\"s\">'month(s)'</span><span class=\"k\">,</span>","        monthly_weekday_of_month_1<span class=\"k\">:</span> <span class=\"s\">'The'</span><span class=\"k\">,</span>","        monthly_weekday_of_month_2<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        monthly_weekday_of_month_3<span class=\"k\">:</span> <span class=\"s\">', every'</span><span class=\"k\">,</span>","        monthly_weekday_of_month_4<span class=\"k\">:</span> <span class=\"s\">'month(s)'</span><span class=\"k\">,</span>","","        yearly_day_of_month_1<span class=\"k\">:</span> <span class=\"s\">'Every'</span><span class=\"k\">,</span>","        yearly_day_of_month_2<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        yearly_day_of_month_3<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        yearly_weekday_of_month_1<span class=\"k\">:</span> <span class=\"s\">'The'</span><span class=\"k\">,</span>","        yearly_weekday_of_month_2<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        yearly_weekday_of_month_3<span class=\"k\">:</span> <span class=\"s\">'of'</span><span class=\"k\">,</span>","        yearly_weekday_of_month_4<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","        ","        range_label<span class=\"k\">:</span> <span class=\"s\">'End recurrance:'</span><span class=\"k\">,</span>","        range_no_end_label<span class=\"k\">:</span> <span class=\"s\">'No end'</span><span class=\"k\">,</span>","        range_by_occurrences_label_1<span class=\"k\">:</span> <span class=\"s\">'Ending after'</span><span class=\"k\">,</span>","        range_by_occurrences_label_2<span class=\"k\">:</span> <span class=\"s\">'occurrence(s)'</span><span class=\"k\">,</span>","        range_by_end_date_label<span class=\"k\">:</span> <span class=\"s\">'Until '</span><span class=\"k\">,</span>","        ","        including_label<span class=\"k\">:</span> <span class=\"s\">',and also '</span><span class=\"k\">,</span>","        except_label<span class=\"k\">:</span> <span class=\"s\">', except for'</span><span class=\"k\">,</span>","","        cancel_button_label<span class=\"k\">:</span> <span class=\"s\">'Cancel'</span><span class=\"k\">,</span>        ","        save_button_label<span class=\"k\">:</span> <span class=\"s\">'Save'</span><span class=\"k\">,</span>","","        order_indexes<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'First'</span><span class=\"k\">,</span> <span class=\"s\">'Second'</span><span class=\"k\">,</span> <span class=\"s\">'Third'</span><span class=\"k\">,</span> <span class=\"s\">'Fourth'</span><span class=\"k\">,</span> <span class=\"s\">'Last'</span><span class=\"k\">],</span>","        months<span class=\"k\">:</span> <span class=\"k\">[</span>","            <span class=\"s\">'January'</span><span class=\"k\">,</span> <span class=\"s\">'February'</span><span class=\"k\">,</span> <span class=\"s\">'March'</span><span class=\"k\">,</span> <span class=\"s\">'April'</span><span class=\"k\">,</span> <span class=\"s\">'May'</span><span class=\"k\">,</span> <span class=\"s\">'June'</span><span class=\"k\">,</span>","            <span class=\"s\">'July'</span><span class=\"k\">,</span> <span class=\"s\">'August'</span><span class=\"k\">,</span> <span class=\"s\">'September'</span><span class=\"k\">,</span> <span class=\"s\">'October'</span><span class=\"k\">,</span> <span class=\"s\">'November'</span><span class=\"k\">,</span> <span class=\"s\">'December'</span><span class=\"k\">],</span>","\tshort_months<span class=\"k\">:</span> <span class=\"k\">[</span>","            <span class=\"s\">'Jan'</span><span class=\"k\">,</span> <span class=\"s\">'Feb'</span><span class=\"k\">,</span> <span class=\"s\">'Mar'</span><span class=\"k\">,</span> <span class=\"s\">'Apr'</span><span class=\"k\">,</span> <span class=\"s\">'May'</span><span class=\"k\">,</span> <span class=\"s\">'Jun'</span><span class=\"k\">,</span>","            <span class=\"s\">'Jul'</span><span class=\"k\">,</span> <span class=\"s\">'Aug'</span><span class=\"k\">,</span> <span class=\"s\">'Sep'</span><span class=\"k\">,</span> <span class=\"s\">'Oct'</span><span class=\"k\">,</span> <span class=\"s\">'Nov'</span><span class=\"k\">,</span> <span class=\"s\">'Dec'</span><span class=\"k\">],</span>","        weekdays<span class=\"k\">:</span> <span class=\"k\">[</span>","            <span class=\"s\">'Monday'</span><span class=\"k\">,</span> <span class=\"s\">'Tuesday'</span><span class=\"k\">,</span> <span class=\"s\">'Wednesday'</span><span class=\"k\">,</span> <span class=\"s\">'Thursday'</span><span class=\"k\">,</span>","            <span class=\"s\">'Friday'</span><span class=\"k\">,</span> <span class=\"s\">'Saturday'</span><span class=\"k\">,</span> <span class=\"s\">'Sunday'</span><span class=\"k\">],</span>","        short_weekdays<span class=\"k\">:</span> <span class=\"k\">[</span>","            <span class=\"s\">'Mon'</span><span class=\"k\">,</span> <span class=\"s\">'Tue'</span><span class=\"k\">,</span> <span class=\"s\">'Wed'</span><span class=\"k\">,</span> <span class=\"s\">'Thu'</span><span class=\"k\">,</span> <span class=\"s\">'Fri'</span><span class=\"k\">,</span> <span class=\"s\">'Sat'</span><span class=\"k\">,</span> <span class=\"s\">'Sun'</span><span class=\"k\">],</span>","            ","        long_date_format<span class=\"k\">:</span> <span class=\"s\">'mmmm dd, yyyy'</span><span class=\"k\">,</span>","        short_date_format<span class=\"k\">:</span> <span class=\"s\">'mm/dd/yyyy'</span><span class=\"k\">,</span>","            ","        no_template_match<span class=\"k\">:</span> <span class=\"s\">'Warning: This event uses recurrence features not '</span> <span class=\"k\">+</span>","                           <span class=\"s\">'supported by this widget. Saving the recurrence '</span> <span class=\"k\">+</span>","                           <span class=\"s\">'may change the recurrence in unintended ways.'</span><span class=\"k\">,</span>","                           ","        rtemplate<span class=\"k\">:</span> <span class=\"k\">{</span>","            daily<span class=\"k\">:</span> <span class=\"s\">'Daily'</span><span class=\"k\">,</span>","            mondayfriday<span class=\"k\">:</span> <span class=\"s\">'Mondays and Fridays'</span><span class=\"k\">,</span>","            weekdays<span class=\"k\">:</span> <span class=\"s\">'Weekdays'</span><span class=\"k\">,</span>","            weekly<span class=\"k\">:</span> <span class=\"s\">'Weekly'</span><span class=\"k\">,</span>","            monthly<span class=\"k\">:</span> <span class=\"s\">'Monthly'</span><span class=\"k\">,</span>","            yearly<span class=\"k\">:</span> <span class=\"s\">'Yearly'</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","","    <span class=\"k\">var</span> OCCURRENCE_TMPL <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'&lt;div class=\"recurrenceinput_occurrences\"&gt;&lt;hr/&gt;'</span><span class=\"k\">,</span>","        <span class=\"s\">'{{each occurrences}}'</span><span class=\"k\">,</span>","            <span class=\"s\">'&lt;div class=\"occurrence&gt;'</span><span class=\"k\">,</span>","                <span class=\"s\">'&lt;span class=\"date ${occurrences[$index].type}\"&gt;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'${occurrences[$index].formatted_date}'</span><span class=\"k\">,</span>","                <span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">,</span>","\t\t<span class=\"s\">'{{if !readOnly}}'</span><span class=\"k\">,</span>","\t\t    <span class=\"s\">'&lt;span class=\"action\"&gt;'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'{{if occurrences[$index].type === \"rrule\"}}'</span><span class=\"k\">,</span>","\t\t\t    <span class=\"s\">'&lt;a date=\"${occurrences[$index].date}\" href=\"#\"'</span><span class=\"k\">,</span>","\t\t\t       <span class=\"s\">'class=\"${occurrences[$index].type}\" &gt;'</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">'Exclude'</span><span class=\"k\">,</span>","\t\t\t    <span class=\"s\">'&lt;/a&gt;'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'{{/if}}'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'{{if occurrences[$index].type === \"rdate\"}}'</span><span class=\"k\">,</span>","\t\t\t    <span class=\"s\">'&lt;a date=\"${occurrences[$index].date}\" href=\"#\"'</span><span class=\"k\">,</span>","\t\t\t       <span class=\"s\">'class=\"${occurrences[$index].type}\" &gt;'</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">'Remove'</span><span class=\"k\">,</span>","\t\t\t    <span class=\"s\">'&lt;/a&gt;'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'{{/if}}'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'{{if occurrences[$index].type === \"exdate\"}}'</span><span class=\"k\">,</span>","\t\t\t    <span class=\"s\">'&lt;a date=\"${occurrences[$index].date}\" href=\"#\"'</span><span class=\"k\">,</span>","\t\t\t       <span class=\"s\">'class=\"${occurrences[$index].type}\" &gt;'</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">'Include'</span><span class=\"k\">,</span>","\t\t\t    <span class=\"s\">'&lt;/a&gt;'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'{{/if}}'</span><span class=\"k\">,</span>","\t\t    <span class=\"s\">'&lt;/span&gt;'</span><span class=\"k\">,</span>","\t\t<span class=\"s\">'{{/if}}'</span><span class=\"k\">,</span>","            <span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">,</span>","        <span class=\"s\">'{{/each}}'</span><span class=\"k\">,</span>","        <span class=\"s\">'&lt;div class=\"batching\"&gt;'</span><span class=\"k\">,</span>","            <span class=\"s\">'{{each batch.batches}}'</span><span class=\"k\">,</span>","                <span class=\"s\">'{{if $index === batch.current_batch}}&lt;span class=\"current\"&gt;{{/if}}'</span><span class=\"k\">,</span>","                    <span class=\"s\">'&lt;a href=\"#\" start=\"${batch.batches[$index][0]}\"&gt;[${batch.batches[$index][0]} - ${batch.batches[$index][1]}]&lt;/a&gt;'</span><span class=\"k\">,</span>","                <span class=\"s\">'{{if $index === batch.current_batch}}&lt;/span&gt;{{/if}}'</span><span class=\"k\">,</span>","            <span class=\"s\">'{{/each}}'</span><span class=\"k\">,</span>","        <span class=\"s\">'&lt;/div&gt;&lt;/div&gt;'</span><span class=\"k\">].</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">);</span>","    ","    $<span class=\"k\">.</span>template<span class=\"k\">(</span><span class=\"s\">'occurrence_tmpl'</span><span class=\"k\">,</span> OCCURRENCE_TMPL<span class=\"k\">);</span>","","    ","    <span class=\"c\">// Formatting function (mostly) from jQueryTools dateinput</span>","    <span class=\"k\">var</span> Re <span class=\"k\">=</span> <span class=\"s\">/d{1,4}|m{1,4}|yy(?:yy)?|\"[^\"]*\"|'[^']*'/g</span><span class=\"k\">;</span>","    ","    <span class=\"k\">function</span> zeropad<span class=\"k\">(</span>val<span class=\"k\">,</span> len<span class=\"k\">)</span> <span class=\"k\">{</span>","\t    val <span class=\"k\">=</span> <span class=\"s\">''</span> <span class=\"k\">+</span> val<span class=\"k\">;</span>","\t    len <span class=\"k\">=</span> len <span class=\"k\">||</span> <span class=\"s\">2</span><span class=\"k\">;</span>","\t    <span class=\"k\">while</span> <span class=\"k\">(</span>val<span class=\"k\">.</span>length <span class=\"k\">&lt;</span> len<span class=\"k\">)</span> <span class=\"k\">{</span> val <span class=\"k\">=</span> <span class=\"s\">\"0\"</span> <span class=\"k\">+</span> val<span class=\"k\">;</span> <span class=\"k\">}</span>","\t    <span class=\"k\">return</span> val<span class=\"k\">;</span>","    <span class=\"k\">}</span>  ","    ","    <span class=\"k\">function</span> format<span class=\"k\">(</span>date<span class=\"k\">,</span> fmt<span class=\"k\">,</span> conf<span class=\"k\">)</span> <span class=\"k\">{</span>","\t    ","      <span class=\"k\">var</span> d <span class=\"k\">=</span> date<span class=\"k\">.</span>getDate<span class=\"k\">(),</span>","\t\t    D <span class=\"k\">=</span> date<span class=\"k\">.</span>getDay<span class=\"k\">(),</span>","\t\t    m <span class=\"k\">=</span> date<span class=\"k\">.</span>getMonth<span class=\"k\">(),</span>","\t\t    y <span class=\"k\">=</span> date<span class=\"k\">.</span>getFullYear<span class=\"k\">(),</span>","","\t\t    flags <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t    d<span class=\"k\">:</span>    d<span class=\"k\">,</span>","\t\t\t    dd<span class=\"k\">:</span>   zeropad<span class=\"k\">(</span>d<span class=\"k\">),</span>","\t\t\t    ddd<span class=\"k\">:</span>  conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>short_weekdays<span class=\"k\">[</span>D<span class=\"k\">],</span>","\t\t\t    dddd<span class=\"k\">:</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>D<span class=\"k\">],</span>","\t\t\t    m<span class=\"k\">:</span>    m <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\t\t    mm<span class=\"k\">:</span>   zeropad<span class=\"k\">(</span>m <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">),</span>","\t\t\t    mmm<span class=\"k\">:</span>  conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>short_months<span class=\"k\">[</span>m<span class=\"k\">],</span>","\t\t\t    mmmm<span class=\"k\">:</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>months<span class=\"k\">[</span>m<span class=\"k\">],</span>","\t\t\t    yy<span class=\"k\">:</span>   String<span class=\"k\">(</span>y<span class=\"k\">).</span>slice<span class=\"k\">(</span><span class=\"s\">2</span><span class=\"k\">),</span>","\t\t\t    yyyy<span class=\"k\">:</span> y","\t\t    <span class=\"k\">}</span><span class=\"k\">;</span>","","\t    <span class=\"k\">var</span> result <span class=\"k\">=</span> fmt<span class=\"k\">.</span>replace<span class=\"k\">(</span>Re<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>$0<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t    <span class=\"k\">return</span> $0 <span class=\"k\">in</span> flags <span class=\"k\">?</span> flags<span class=\"k\">[</span>$0<span class=\"k\">]</span> <span class=\"k\">:</span> $0<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> $0<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">);</span>","\t    <span class=\"k\">}</span><span class=\"k\">);</span>","\t    ","\t    <span class=\"k\">return</span> result","\t    ","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * Parsing RFC5545 from widget</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> widget_save_to_rfc5545<span class=\"k\">(</span>form<span class=\"k\">,</span> conf<span class=\"k\">,</span> tz<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> value <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_rtemplate]'</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","        <span class=\"k\">var</span> rtemplate <span class=\"k\">=</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">[</span>value<span class=\"k\">];</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> rtemplate<span class=\"k\">.</span>rrule<span class=\"k\">;</span>","        <span class=\"k\">var</span> human <span class=\"k\">=</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>rtemplate<span class=\"k\">[</span>value<span class=\"k\">];</span>","        <span class=\"k\">var</span> field<span class=\"k\">,</span> input<span class=\"k\">,</span> weekdays<span class=\"k\">,</span> i18nweekdays<span class=\"k\">,</span> i<span class=\"k\">,</span> j<span class=\"k\">,</span> index<span class=\"k\">,</span> tmp<span class=\"k\">;</span>","        <span class=\"k\">var</span> day<span class=\"k\">,</span> month<span class=\"k\">,</span> year<span class=\"k\">,</span> interval<span class=\"k\">,</span> yearly_type<span class=\"k\">,</span> occurrences<span class=\"k\">,</span> date<span class=\"k\">;</span>","        ","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> rtemplate<span class=\"k\">.</span>fields<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            field <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> rtemplate<span class=\"k\">.</span>fields<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            ","            <span class=\"k\">switch</span> <span class=\"k\">(</span>field<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'id'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_daily_interval'</span><span class=\"k\">:</span>","                input <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_daily_interval]'</span><span class=\"k\">);</span>","                result <span class=\"k\">+=</span> <span class=\"s\">';INTERVAL='</span> <span class=\"k\">+</span> input<span class=\"k\">.</span>val<span class=\"k\">();</span>","                human <span class=\"k\">=</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>daily_interval_1 <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> input<span class=\"k\">.</span>val<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>daily_interval_2<span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_weekly_interval'</span><span class=\"k\">:</span>","                input <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_weekly_interval]'</span><span class=\"k\">);</span>","                result <span class=\"k\">+=</span> <span class=\"s\">';INTERVAL='</span> <span class=\"k\">+</span> input<span class=\"k\">.</span>val<span class=\"k\">();</span>","                human <span class=\"k\">=</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekly_interval_1 <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> input<span class=\"k\">.</span>val<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekly_interval_2<span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_weekly_weekdays'</span><span class=\"k\">:</span>","                weekdays <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                i18nweekdays <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> j <span class=\"k\">&lt;</span> conf<span class=\"k\">.</span>weekdays<span class=\"k\">.</span>length<span class=\"k\">;</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    input <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_weekly_weekdays_'</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>input<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>weekdays<span class=\"k\">)</span> <span class=\"k\">{</span>","                            weekdays <span class=\"k\">+=</span> <span class=\"s\">','</span><span class=\"k\">;</span>","                            i18nweekdays <span class=\"k\">+=</span> <span class=\"s\">', '</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        weekdays <span class=\"k\">+=</span> conf<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>j<span class=\"k\">];</span>","                        i18nweekdays <span class=\"k\">+=</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>j<span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>weekdays<span class=\"k\">)</span> <span class=\"k\">{</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';BYDAY='</span> <span class=\"k\">+</span> weekdays<span class=\"k\">;</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekly_weekdays <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> i18nweekdays<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_monthly_options'</span><span class=\"k\">:</span>","                <span class=\"k\">var</span> monthly_type <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_monthly_type]:checked'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>monthly_type<span class=\"k\">)</span> <span class=\"k\">{</span>","                ","                <span class=\"k\">case</span> <span class=\"s\">'DAY_OF_MONTH'</span><span class=\"k\">:</span>","                    day <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_day_of_month_day]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    interval <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_monthly_day_of_month_interval]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';BYMONTHDAY='</span> <span class=\"k\">+</span> day<span class=\"k\">;</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';INTERVAL='</span> <span class=\"k\">+</span> interval<span class=\"k\">;</span>                        ","                    human <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_day_of_month_1 <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> day <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_day_of_month_2<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>interval <span class=\"k\">!==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        human <span class=\"k\">+=</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_day_of_month_3 <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> interval <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_day_of_month_4<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'WEEKDAY_OF_MONTH'</span><span class=\"k\">:</span>","                    index <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_weekday_of_month_index]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    day <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_weekday_of_month]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    interval <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_monthly_weekday_of_month_interval]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span>day<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'MO'</span><span class=\"k\">,</span> <span class=\"s\">'TU'</span><span class=\"k\">,</span> <span class=\"s\">'WE'</span><span class=\"k\">,</span> <span class=\"s\">'TH'</span><span class=\"k\">,</span> <span class=\"s\">'FR'</span><span class=\"k\">,</span> <span class=\"s\">'SA'</span><span class=\"k\">,</span> <span class=\"s\">'SU'</span><span class=\"k\">])</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        result <span class=\"k\">+=</span> <span class=\"s\">';BYDAY='</span> <span class=\"k\">+</span> index <span class=\"k\">+</span> day<span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_weekday_of_month_1 <span class=\"k\">+</span> <span class=\"s\">' '</span><span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>order_indexes<span class=\"k\">[</span>conf<span class=\"k\">.</span>order_indexes<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>index<span class=\"k\">)];</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_weekday_of_month_2<span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>conf<span class=\"k\">.</span>weekdays<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>day<span class=\"k\">)];</span>","                    <span class=\"k\">}</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';INTERVAL='</span> <span class=\"k\">+</span> interval<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>interval <span class=\"k\">!==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_weekday_of_month_3 <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> interval <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>monthly_weekday_of_month_4<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_yearly_options'</span><span class=\"k\">:</span>","                yearly_type <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_yearly_type]:checked'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>yearly_type<span class=\"k\">)</span> <span class=\"k\">{</span>","                ","                <span class=\"k\">case</span> <span class=\"s\">'DAY_OF_MONTH'</span><span class=\"k\">:</span>","                    month <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_day_of_month]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    day <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_day_of_month_index]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';BYMONTH='</span> <span class=\"k\">+</span> month<span class=\"k\">;</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';BYMONTHDAY='</span> <span class=\"k\">+</span> day<span class=\"k\">;</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>months<span class=\"k\">[</span>month <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> day<span class=\"k\">;</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'WEEKDAY_OF_MONTH'</span><span class=\"k\">:</span>","                    index <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_index]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    day <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_day]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    month <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_month]'</span><span class=\"k\">,</span> form<span class=\"k\">).</span>val<span class=\"k\">();</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';BYMONTH='</span> <span class=\"k\">+</span> month<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span>day<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'MO'</span><span class=\"k\">,</span> <span class=\"s\">'TU'</span><span class=\"k\">,</span> <span class=\"s\">'WE'</span><span class=\"k\">,</span> <span class=\"s\">'TH'</span><span class=\"k\">,</span> <span class=\"s\">'FR'</span><span class=\"k\">,</span> <span class=\"s\">'SA'</span><span class=\"k\">,</span> <span class=\"s\">'SU'</span><span class=\"k\">])</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        result <span class=\"k\">+=</span> <span class=\"s\">';BYDAY='</span> <span class=\"k\">+</span> index <span class=\"k\">+</span> day<span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>yearly_weekday_of_month_1<span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>order_indexes<span class=\"k\">[</span>conf<span class=\"k\">.</span>order_indexes<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>index<span class=\"k\">)];</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>yearly_weekday_of_month_2<span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>conf<span class=\"k\">.</span>weekdays<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>day<span class=\"k\">)];</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>yearly_weekday_of_month_3<span class=\"k\">;</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>months<span class=\"k\">[</span>month <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","                        human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>yearly_weekday_of_month_4<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_range_options'</span><span class=\"k\">:</span>","                <span class=\"k\">var</span> range_type <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_type]:checked'</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>range_type<span class=\"k\">)</span> <span class=\"k\">{</span>","                ","                <span class=\"k\">case</span> <span class=\"s\">'BY_OCCURRENCES'</span><span class=\"k\">:</span>","                    occurrences <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_by_occurrences_value]'</span><span class=\"k\">).</span>val<span class=\"k\">();</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';COUNT='</span> <span class=\"k\">+</span> occurrences<span class=\"k\">;</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>range_by_occurrences_label_1<span class=\"k\">;</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> occurrences<span class=\"k\">;</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>range_by_occurrences_label_2<span class=\"k\">;</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'BY_END_DATE'</span><span class=\"k\">:</span>","                    field <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_by_end_date_calendar]'</span><span class=\"k\">);</span>","                    date <span class=\"k\">=</span> field<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'dateinput'</span><span class=\"k\">).</span>getValue<span class=\"k\">(</span><span class=\"s\">'yyyymmdd'</span><span class=\"k\">);</span>","                    result <span class=\"k\">+=</span> <span class=\"s\">';UNTIL='</span> <span class=\"k\">+</span> date <span class=\"k\">+</span> <span class=\"s\">'T000000'</span><span class=\"k\">;</span>","\t\t    <span class=\"k\">if</span> <span class=\"k\">(</span>tz <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// Make it UTC:</span>","\t\t\tresult <span class=\"k\">+=</span> <span class=\"s\">'Z'</span><span class=\"k\">;</span>","\t\t    <span class=\"k\">}</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">', '</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>range_by_end_date_label<span class=\"k\">;</span>","                    human <span class=\"k\">+=</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> field<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'dateinput'</span><span class=\"k\">).</span>getValue<span class=\"k\">(</span>conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>long_date_format<span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            tmp <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t    year <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">[</span>i<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">4</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">);</span>","\t\t    month <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">[</span>i<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">4</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t    day <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">[</span>i<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">8</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">);</span>","\t\t    tmp<span class=\"k\">.</span>push<span class=\"k\">(</span>format<span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">(</span>year<span class=\"k\">,</span> month<span class=\"k\">,</span> day<span class=\"k\">),</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>long_date_format<span class=\"k\">,</span> conf<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span>","\t    <span class=\"k\">}</span>","\t    <span class=\"k\">if</span> <span class=\"k\">(</span>tmp<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                human <span class=\"k\">=</span> human <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>including_label <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> tmp<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'; '</span><span class=\"k\">);</span>","\t    <span class=\"k\">}</span>","        <span class=\"k\">}</span>","\t","        <span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            tmp <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t    <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t    year <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">[</span>i<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">4</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">);</span>","\t\t    month <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">[</span>i<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">4</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t    day <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">[</span>i<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">8</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">);</span>","\t\t    tmp<span class=\"k\">.</span>push<span class=\"k\">(</span>format<span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">(</span>year<span class=\"k\">,</span> month<span class=\"k\">,</span> day<span class=\"k\">),</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>long_date_format<span class=\"k\">,</span> conf<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span>","\t    <span class=\"k\">}</span>","\t    <span class=\"k\">if</span> <span class=\"k\">(</span>tmp<span class=\"k\">.</span>length <span class=\"k\">!==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                human <span class=\"k\">=</span> human <span class=\"k\">+</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>except_label <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> tmp<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'; '</span><span class=\"k\">);</span>","\t    <span class=\"k\">}</span>","        <span class=\"k\">}</span>","\tresult <span class=\"k\">=</span> <span class=\"s\">'RRULE:'</span> <span class=\"k\">+</span> result<span class=\"k\">;</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>join<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t    result <span class=\"k\">=</span> result <span class=\"k\">+</span> <span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">EXDATE:'</span> <span class=\"k\">+</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">.</span>join<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t    result <span class=\"k\">=</span> result <span class=\"k\">+</span> <span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">RDATE:'</span> <span class=\"k\">+</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span>result<span class=\"k\">:</span> result<span class=\"k\">,</span> description<span class=\"k\">:</span> human<span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> parseLine<span class=\"k\">(</span>icalline<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> pos <span class=\"k\">=</span> icalline<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">':'</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> property <span class=\"k\">=</span> icalline<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> pos<span class=\"k\">);</span>","        result<span class=\"k\">.</span>value <span class=\"k\">=</span> icalline<span class=\"k\">.</span>substring<span class=\"k\">(</span>pos <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>property<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            pos <span class=\"k\">=</span> property<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">';'</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>parameters <span class=\"k\">=</span> property<span class=\"k\">.</span>substring<span class=\"k\">(</span>pos <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            result<span class=\"k\">.</span>property <span class=\"k\">=</span> property<span class=\"k\">.</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> pos<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            result<span class=\"k\">.</span>parameters <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            result<span class=\"k\">.</span>property <span class=\"k\">=</span> property<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">function</span> cleanDates<span class=\"k\">(</span>dates<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">// Get rid of timezones</span>","        <span class=\"c\">// TODO: We could parse dates and range here, maybe?</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">var</span> split_dates <span class=\"k\">=</span> dates<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> date<span class=\"k\">;</span>","        ","        <span class=\"k\">for</span> <span class=\"k\">(</span>date <span class=\"k\">in</span> split_dates<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>split_dates<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>date<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>split_dates<span class=\"k\">[</span>date<span class=\"k\">].</span>indexOf<span class=\"k\">(</span><span class=\"s\">'Z'</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span>split_dates<span class=\"k\">[</span>date<span class=\"k\">].</span>substring<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">15</span><span class=\"k\">));</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    result<span class=\"k\">.</span>push<span class=\"k\">(</span>split_dates<span class=\"k\">[</span>date<span class=\"k\">]);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">function</span> parseIcal<span class=\"k\">(</span>icaldata<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> lines <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> propAndValue <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">var</span> line <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> nextline<span class=\"k\">;</span>","        ","        lines <span class=\"k\">=</span> icaldata<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">);</span>","        lines<span class=\"k\">.</span>reverse<span class=\"k\">();</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>lines<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                nextline <span class=\"k\">=</span> lines<span class=\"k\">.</span>pop<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>nextline<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">' '</span> <span class=\"k\">||</span> nextline<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">'</span><span class=\"t\">\\t</span><span class=\"s\">'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Line continuation:</span>","                    line <span class=\"k\">=</span> line <span class=\"k\">+</span> nextline<span class=\"k\">;</span>","                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                nextline <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            ","            <span class=\"c\">// New line; the current one is finished, add it to the result.</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>line <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span> ","                line <span class=\"k\">=</span> parseLine<span class=\"k\">(</span>line<span class=\"k\">);</span>","                 <span class=\"c\">// We ignore properties for now</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>line<span class=\"k\">.</span>property <span class=\"k\">===</span> <span class=\"s\">'RDATE'</span> <span class=\"k\">||</span> line<span class=\"k\">.</span>property <span class=\"k\">===</span> <span class=\"s\">'EXDATE'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    result<span class=\"k\">[</span>line<span class=\"k\">.</span>property<span class=\"k\">]</span> <span class=\"k\">=</span> cleanDates<span class=\"k\">(</span>line<span class=\"k\">.</span>value<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    result<span class=\"k\">[</span>line<span class=\"k\">.</span>property<span class=\"k\">]</span> <span class=\"k\">=</span> line<span class=\"k\">.</span>value<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            ","            line <span class=\"k\">=</span> nextline<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>line <span class=\"k\">===</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">function</span> widget_load_from_rfc5545<span class=\"k\">(</span>form<span class=\"k\">,</span> conf<span class=\"k\">,</span> icaldata<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> unsupported_features <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> i<span class=\"k\">,</span> matches<span class=\"k\">,</span> match<span class=\"k\">,</span> match_index<span class=\"k\">,</span> rtemplate<span class=\"k\">,</span> d<span class=\"k\">,</span> input<span class=\"k\">,</span> index<span class=\"k\">;</span>","        <span class=\"k\">var</span> selector<span class=\"k\">,</span> selectors<span class=\"k\">,</span> field<span class=\"k\">,</span> radiobutton<span class=\"k\">,</span> start<span class=\"k\">,</span> end<span class=\"k\">;</span>","        <span class=\"k\">var</span> interval<span class=\"k\">,</span> byday<span class=\"k\">,</span> bymonth<span class=\"k\">,</span> bymonthday<span class=\"k\">,</span> bysetpos<span class=\"k\">,</span> count<span class=\"k\">,</span> until<span class=\"k\">;</span>","        <span class=\"k\">var</span> day<span class=\"k\">,</span> month<span class=\"k\">,</span> year<span class=\"k\">,</span> weekday<span class=\"k\">,</span> ical<span class=\"k\">;</span>","","        form<span class=\"k\">.</span>ical <span class=\"k\">=</span> parseIcal<span class=\"k\">(</span>icaldata<span class=\"k\">);</span>","        ","        matches <span class=\"k\">=</span> <span class=\"s\">/INTERVAL=([0-9]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            interval <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            interval <span class=\"k\">=</span> <span class=\"s\">'1'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    ","        matches <span class=\"k\">=</span> <span class=\"s\">/BYDAY=([^;]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            byday <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            byday <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        matches <span class=\"k\">=</span> <span class=\"s\">/BYMONTHDAY=([^;]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            bymonthday <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            bymonthday <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    ","        matches <span class=\"k\">=</span> <span class=\"s\">/BYMONTH=([^;]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            bymonth <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            bymonth <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    ","        matches <span class=\"k\">=</span> <span class=\"s\">/BYSETPOS=([^;]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            bysetpos <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            bysetpos <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        matches <span class=\"k\">=</span> <span class=\"s\">/COUNT=([0-9]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            count <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            count <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        matches <span class=\"k\">=</span> <span class=\"s\">/UNTIL=([0-9T]+);?/</span><span class=\"k\">.</span>exec<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>matches<span class=\"k\">)</span> <span class=\"k\">{</span>","            until <span class=\"k\">=</span> matches<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            until <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        <span class=\"c\">// Find the best rule:</span>","        match <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        match_index <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>conf<span class=\"k\">.</span>rtemplate<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","                rtemplate <span class=\"k\">=</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">[</span>i<span class=\"k\">];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>rtemplate<span class=\"k\">.</span>rrule<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> match<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// This is the best match so far</span>","                        match <span class=\"k\">=</span> form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RRULE<span class=\"k\">;</span>","                        match_index <span class=\"k\">=</span> i<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>  ","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","            rtemplate <span class=\"k\">=</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">[</span>match_index<span class=\"k\">];</span>","            <span class=\"c\">// Set the selector:</span>","            selector <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_rtemplate]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>match_index<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span>rtemplate <span class=\"k\">in</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>conf<span class=\"k\">.</span>rtemplate<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>rtemplate<span class=\"k\">))</span> <span class=\"k\">{</span>","                    rtemplate <span class=\"k\">=</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">[</span>rtemplate<span class=\"k\">];</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            unsupported_features <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> rtemplate<span class=\"k\">.</span>fields<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            field <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> rtemplate<span class=\"k\">.</span>fields<span class=\"k\">[</span>i<span class=\"k\">]);</span>","            <span class=\"k\">switch</span> <span class=\"k\">(</span>field<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'id'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_daily_interval'</span><span class=\"k\">:</span>","                field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_daily_interval]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>interval<span class=\"k\">);</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>  ","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_weekly_interval'</span><span class=\"k\">:</span>","                field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_weekly_interval]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>interval<span class=\"k\">);</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_weekly_weekdays'</span><span class=\"k\">:</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>d <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> d <span class=\"k\">&lt;</span> conf<span class=\"k\">.</span>weekdays<span class=\"k\">.</span>length<span class=\"k\">;</span> d<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    day <span class=\"k\">=</span> conf<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>d<span class=\"k\">];</span>","                    input <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_weekly_weekdays_'</span> <span class=\"k\">+</span> day <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">);</span>","                    input<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> byday<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>day<span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_monthly_options'</span><span class=\"k\">:</span>","                <span class=\"k\">var</span> monthly_type <span class=\"k\">=</span> <span class=\"s\">'DAY_OF_MONTH'</span><span class=\"k\">;</span> <span class=\"c\">// Default to using BYMONTHDAY</span>","                ","                <span class=\"k\">if</span> <span class=\"k\">(</span>bymonthday<span class=\"k\">)</span> <span class=\"k\">{</span>","                    monthly_type <span class=\"k\">=</span> <span class=\"s\">'DAY_OF_MONTH'</span><span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>bymonthday<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// No support for multiple days in one month</span>","                        unsupported_features <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        <span class=\"c\">// Just keep the first</span>","                        bymonthday <span class=\"k\">=</span> bymonthday<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_day_of_month_day]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>bymonthday<span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_monthly_day_of_month_interval]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>interval<span class=\"k\">);</span>","                <span class=\"k\">}</span>","    ","                <span class=\"k\">if</span> <span class=\"k\">(</span>byday<span class=\"k\">)</span> <span class=\"k\">{</span>","                    monthly_type <span class=\"k\">=</span> <span class=\"s\">'WEEKDAY_OF_MONTH'</span><span class=\"k\">;</span>","                    ","                    <span class=\"k\">if</span> <span class=\"k\">(</span>byday<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// No support for multiple days in one month</span>","                        unsupported_features <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        byday <span class=\"k\">=</span> byday<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                    index <span class=\"k\">=</span> byday<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">);</span>","                    weekday <span class=\"k\">=</span> byday<span class=\"k\">.</span>slice<span class=\"k\">(-</span><span class=\"s\">2</span><span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_weekday_of_month_index]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>index<span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_weekday_of_month]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>weekday<span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_monthly_weekday_of_month_interval]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>interval<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                ","                selectors <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_monthly_type]'</span><span class=\"k\">);</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> index <span class=\"k\">&lt;</span> selectors<span class=\"k\">.</span>length<span class=\"k\">;</span> index<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    radiobutton <span class=\"k\">=</span> selectors<span class=\"k\">[</span>index<span class=\"k\">];</span>","                    $<span class=\"k\">(</span>radiobutton<span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> radiobutton<span class=\"k\">.</span>value <span class=\"k\">===</span> monthly_type<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","    ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_yearly_options'</span><span class=\"k\">:</span>","                <span class=\"k\">var</span> yearly_type <span class=\"k\">=</span> <span class=\"s\">'DAY_OF_MONTH'</span><span class=\"k\">;</span> <span class=\"c\">// Default to using BYMONTHDAY</span>","                ","                <span class=\"k\">if</span> <span class=\"k\">(</span>bymonthday<span class=\"k\">)</span> <span class=\"k\">{</span>","                    yearly_type <span class=\"k\">=</span> <span class=\"s\">'DAY_OF_MONTH'</span><span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>bymonthday<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// No support for multiple days in one month</span>","                        unsupported_features <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        bymonthday <span class=\"k\">=</span> bymonthday<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_day_of_month]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>bymonth<span class=\"k\">);</span>                    ","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_day_of_month_index]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>bymonthday<span class=\"k\">);</span>                    ","                <span class=\"k\">}</span>","    ","                <span class=\"k\">if</span> <span class=\"k\">(</span>byday<span class=\"k\">)</span> <span class=\"k\">{</span>","                    yearly_type <span class=\"k\">=</span> <span class=\"s\">'WEEKDAY_OF_MONTH'</span><span class=\"k\">;</span>","                    ","                    <span class=\"k\">if</span> <span class=\"k\">(</span>byday<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// No support for multiple days in one month</span>","                        unsupported_features <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        byday <span class=\"k\">=</span> byday<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                    index <span class=\"k\">=</span> byday<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">);</span>","                    weekday <span class=\"k\">=</span> byday<span class=\"k\">.</span>slice<span class=\"k\">(-</span><span class=\"s\">2</span><span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_index]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>index<span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_day]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>weekday<span class=\"k\">);</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_month]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>bymonth<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                ","                selectors <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_yearly_type]'</span><span class=\"k\">);</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> index <span class=\"k\">&lt;</span> selectors<span class=\"k\">.</span>length<span class=\"k\">;</span> index<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    radiobutton <span class=\"k\">=</span> selectors<span class=\"k\">[</span>index<span class=\"k\">];</span>","                    $<span class=\"k\">(</span>radiobutton<span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> radiobutton<span class=\"k\">.</span>value <span class=\"k\">===</span> yearly_type<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","                ","            <span class=\"k\">case</span> <span class=\"s\">'recurrenceinput_range_options'</span><span class=\"k\">:</span>","                <span class=\"k\">var</span> range_type <span class=\"k\">=</span> <span class=\"s\">'NO_END_DATE'</span><span class=\"k\">;</span>","                ","                <span class=\"k\">if</span> <span class=\"k\">(</span>count<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range_type <span class=\"k\">=</span> <span class=\"s\">'BY_OCCURRENCES'</span><span class=\"k\">;</span>","                    field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_by_occurrences_value]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>count<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                ","                <span class=\"k\">if</span> <span class=\"k\">(</span>until<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range_type <span class=\"k\">=</span> <span class=\"s\">'BY_END_DATE'</span><span class=\"k\">;</span>","                    input <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_by_end_date_calendar]'</span><span class=\"k\">);</span>","                    year <span class=\"k\">=</span> until<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">4</span><span class=\"k\">);</span>","                    month <span class=\"k\">=</span> until<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">4</span><span class=\"k\">,</span> <span class=\"s\">6</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>month<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">'0'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        month <span class=\"k\">=</span> month<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span> <span class=\"c\">//parseInt fails on leading zeroes. </span>","                    <span class=\"k\">}</span>","                    month <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>month<span class=\"k\">,</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    day <span class=\"k\">=</span> until<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">6</span><span class=\"k\">,</span> <span class=\"s\">8</span><span class=\"k\">);</span>","                    input<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'dateinput'</span><span class=\"k\">).</span>setValue<span class=\"k\">(</span>year<span class=\"k\">,</span> month<span class=\"k\">,</span> day<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                ","                selectors <span class=\"k\">=</span> field<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_type]'</span><span class=\"k\">);</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> index <span class=\"k\">&lt;</span>  selectors<span class=\"k\">.</span>length<span class=\"k\">;</span> index<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    radiobutton <span class=\"k\">=</span> selectors<span class=\"k\">[</span>index<span class=\"k\">];</span>","                    $<span class=\"k\">(</span>radiobutton<span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> radiobutton<span class=\"k\">.</span>value <span class=\"k\">===</span> range_type<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span>unsupported_features<span class=\"k\">)</span> <span class=\"k\">{</span>","            alert<span class=\"k\">(</span>conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>no_template_match<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    ","    <span class=\"k\">}</span>","    ","    <span class=\"c\">/**</span>","<span class=\"c\">     * RecurrenceInput - form, display and tools for recurrenceinput widget</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> RecurrenceInput<span class=\"k\">(</span>conf<span class=\"k\">,</span> textarea<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> form<span class=\"k\">,</span> display<span class=\"k\">,</span> overlay_conf<span class=\"k\">;</span>","","        <span class=\"c\">// Extend conf with non-configurable data used by templates.</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span>conf<span class=\"k\">,</span> <span class=\"k\">{</span>","            order_indexes<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'+1'</span><span class=\"k\">,</span> <span class=\"s\">'+2'</span><span class=\"k\">,</span> <span class=\"s\">'+3'</span><span class=\"k\">,</span> <span class=\"s\">'+4'</span><span class=\"k\">,</span> <span class=\"s\">'-1'</span><span class=\"k\">],</span>","            weekdays<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'MO'</span><span class=\"k\">,</span> <span class=\"s\">'TU'</span><span class=\"k\">,</span> <span class=\"s\">'WE'</span><span class=\"k\">,</span> <span class=\"s\">'TH'</span><span class=\"k\">,</span> <span class=\"s\">'FR'</span><span class=\"k\">,</span> <span class=\"s\">'SA'</span><span class=\"k\">,</span> <span class=\"s\">'SU'</span><span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        ","        <span class=\"c\">// The recurrence type dropdown should show certain fields depending</span>","        <span class=\"c\">// on selection:        </span>","        <span class=\"k\">function</span> display_fields<span class=\"k\">(</span>selector<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> i<span class=\"k\">;</span>","            <span class=\"c\">// First hide all the fields</span>","            form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_field'</span><span class=\"k\">).</span>hide<span class=\"k\">();</span>","            <span class=\"c\">// Then show the ones that should be shown.</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> selector<span class=\"k\">.</span>val<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> rtemplate <span class=\"k\">=</span> conf<span class=\"k\">.</span>rtemplate<span class=\"k\">[</span>value<span class=\"k\">];</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> rtemplate<span class=\"k\">.</span>fields<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> rtemplate<span class=\"k\">.</span>fields<span class=\"k\">[</span>i<span class=\"k\">]).</span>show<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> occurrenceExclude<span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","            event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'exdate'</span><span class=\"k\">;</span>","            form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>attributes<span class=\"k\">.</span>date<span class=\"k\">.</span>value<span class=\"k\">);</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>unbind<span class=\"k\">(</span>event<span class=\"k\">);</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>click<span class=\"k\">(</span>occurrenceInclude<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> occurrenceInclude<span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","            event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'rrule'</span><span class=\"k\">;</span>","            form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>splice<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>attributes<span class=\"k\">.</span>date<span class=\"k\">.</span>value<span class=\"k\">),</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>unbind<span class=\"k\">(</span>event<span class=\"k\">);</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>click<span class=\"k\">(</span>occurrenceExclude<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">function</span> occurrenceDelete<span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","            event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'exdate'</span><span class=\"k\">;</span>","            form<span class=\"k\">.</span>ical<span class=\"k\">.</span>RDATE<span class=\"k\">.</span>splice<span class=\"k\">(</span>form<span class=\"k\">.</span>ical<span class=\"k\">.</span>EXDATE<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>attributes<span class=\"k\">.</span>date<span class=\"k\">.</span>value<span class=\"k\">),</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>parent<span class=\"k\">().</span>parent<span class=\"k\">().</span>hide<span class=\"k\">(</span><span class=\"s\">'slow'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        ","\t<span class=\"c\">// element is where to find the tag in question. Can be the form</span>","\t<span class=\"c\">// or the display widget. Defaults to the form.</span>","        <span class=\"k\">function</span> loadOccurrences<span class=\"k\">(</span>start_date<span class=\"k\">,</span> rfc5545<span class=\"k\">,</span> start<span class=\"k\">,</span> readonly<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> date<span class=\"k\">,</span> occurrence_div<span class=\"k\">;</span>","            ","            <span class=\"k\">if</span> <span class=\"k\">(</span>conf<span class=\"k\">.</span>ajaxURL <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            ","\t    <span class=\"k\">if</span> <span class=\"k\">(!</span>readonly<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\telement <span class=\"k\">=</span> form<span class=\"k\">;</span>","\t    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\telement <span class=\"k\">=</span> display<span class=\"k\">;</span>","\t    <span class=\"k\">}</span>","\t    ","            occurrence_div <span class=\"k\">=</span> element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences'</span><span class=\"k\">);</span>","            occurrence_div<span class=\"k\">.</span>hide<span class=\"k\">();</span>","            ","            ","            $<span class=\"k\">.</span>ajax<span class=\"k\">(</span><span class=\"k\">{</span>","                url<span class=\"k\">:</span> conf<span class=\"k\">.</span>ajaxURL<span class=\"k\">,</span>","                async<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span> <span class=\"s\">'post'</span><span class=\"k\">,</span>","                dataType<span class=\"k\">:</span> <span class=\"s\">'json'</span><span class=\"k\">,</span>","                data<span class=\"k\">:</span> <span class=\"k\">{</span>year<span class=\"k\">:</span> start_date<span class=\"k\">.</span>getFullYear<span class=\"k\">(),</span>","                       month<span class=\"k\">:</span> start_date<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"c\">// Sending January as 0? I think not.</span>","                       day<span class=\"k\">:</span> start_date<span class=\"k\">.</span>getDate<span class=\"k\">(),</span>","                       rrule<span class=\"k\">:</span> rfc5545<span class=\"k\">,</span>","                       format<span class=\"k\">:</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>long_date_format<span class=\"k\">,</span>","                       start<span class=\"k\">:</span> start<span class=\"k\">}</span><span class=\"k\">,</span>","                success<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">,</span> status<span class=\"k\">,</span> jqXHR<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> result<span class=\"k\">,</span> element<span class=\"k\">;</span>","\t\t    ","\t\t    <span class=\"k\">if</span> <span class=\"k\">(!</span>readonly<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\telement <span class=\"k\">=</span> form<span class=\"k\">;</span>","\t\t    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\telement <span class=\"k\">=</span> display<span class=\"k\">;</span>","\t\t    <span class=\"k\">}</span>","\t\t    data<span class=\"k\">.</span>readOnly <span class=\"k\">=</span> readonly<span class=\"k\">;</span>","                    result <span class=\"k\">=</span> $<span class=\"k\">.</span>tmpl<span class=\"k\">(</span><span class=\"s\">'occurrence_tmpl'</span><span class=\"k\">,</span> data<span class=\"k\">);</span>","                    occurrence_div <span class=\"k\">=</span> element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences'</span><span class=\"k\">);</span>","                    occurrence_div<span class=\"k\">.</span>replaceWith<span class=\"k\">(</span>result<span class=\"k\">);</span>","                    ","                    <span class=\"c\">// Add the batch actions:</span>","                    element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences .batching a'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>","                        <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","                            event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                            loadOccurrences<span class=\"k\">(</span>start_date<span class=\"k\">,</span> rfc5545<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>attributes<span class=\"k\">.</span>start<span class=\"k\">.</span>value<span class=\"k\">,</span> readonly<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">);</span>","","                    <span class=\"c\">// Add the delete/undelete actions:</span>","\t\t    <span class=\"k\">if</span> <span class=\"k\">(!</span>readonly<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\telement<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences .action a.rrule'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>occurrenceExclude<span class=\"k\">);</span>","\t\t\telement<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences .action a.exdate'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>occurrenceInclude<span class=\"k\">);</span>","\t\t\telement<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences .action a.rdate'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>occurrenceDelete<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"c\">// Show the new div</span>","                    element<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences'</span><span class=\"k\">).</span>show<span class=\"k\">();</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                error<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>jqXHR<span class=\"k\">,</span> textStatus<span class=\"k\">,</span> errorThrown<span class=\"k\">)</span> <span class=\"k\">{</span>","                    alert<span class=\"k\">(</span>textStatus<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","\t","\t<span class=\"k\">function</span> findStartDate<span class=\"k\">()</span> <span class=\"k\">{</span>","\t    <span class=\"k\">var</span> start_field<span class=\"k\">,</span> start_date<span class=\"k\">;</span>","            <span class=\"c\">// Find the default byday and bymonthday from the start date, if any:</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>conf<span class=\"k\">.</span>startField<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// Se if it is a field already</span>","                start_field <span class=\"k\">=</span> $<span class=\"k\">(</span>conf<span class=\"k\">.</span>startField<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>start_field<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Otherwise, we assume it's an id:</span>","                    start_field <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'input[id='</span> <span class=\"k\">+</span> conf<span class=\"k\">.</span>startField <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                ","                <span class=\"c\">// Now we have a field, see if it is a dateinput field:</span>","                start_date <span class=\"k\">=</span> start_field<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'dateinput'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>start_date <span class=\"k\">===</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">//No, it wasn't, just try to interpret it with Date()</span>","                    start_date <span class=\"k\">=</span> start_field<span class=\"k\">.</span>val<span class=\"k\">();</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Yes it was, get the date:</span>","                    start_date <span class=\"k\">=</span> start_date<span class=\"k\">.</span>getValue<span class=\"k\">();</span>","                <span class=\"k\">}</span>","                start_date <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>start_date<span class=\"k\">);</span>","\t\t","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>isNaN<span class=\"k\">(</span>start_date<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> start_date<span class=\"k\">;</span>","            <span class=\"k\">}</span>","\t    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","        <span class=\"c\">// Loading (populating) display and form widget with</span>","        <span class=\"c\">// passed RFC5545 string (data)</span>","        <span class=\"k\">function</span> loadData<span class=\"k\">(</span>rfc5545<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> selector<span class=\"k\">,</span> format<span class=\"k\">,</span> start_field<span class=\"k\">,</span> start_date<span class=\"k\">,</span> dayindex<span class=\"k\">,</span> day<span class=\"k\">;</span>","            ","\t    start_date <span class=\"k\">=</span> findStartDate<span class=\"k\">();</span>","\t    ","            <span class=\"k\">if</span> <span class=\"k\">(</span>start_date <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// If the date is a real date, set the defaults in the form</span>","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_day_of_month_day]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>start_date<span class=\"k\">.</span>getDate<span class=\"k\">());</span>","                dayindex <span class=\"k\">=</span> conf<span class=\"k\">.</span>order_indexes<span class=\"k\">[</span>Math<span class=\"k\">.</span>floor<span class=\"k\">((</span>start_date<span class=\"k\">.</span>getDate<span class=\"k\">()</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">/</span> <span class=\"s\">7</span><span class=\"k\">)];</span>","                day <span class=\"k\">=</span> conf<span class=\"k\">.</span>weekdays<span class=\"k\">[</span>start_date<span class=\"k\">.</span>getDay<span class=\"k\">()</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_weekday_of_month_index]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>dayindex<span class=\"k\">);</span>","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_monthly_weekday_of_month]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>day<span class=\"k\">);</span>","","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_day_of_month]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>start_date<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_day_of_month_index]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>start_date<span class=\"k\">.</span>getDate<span class=\"k\">());</span>                    ","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_index]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>dayindex<span class=\"k\">);</span>","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_day]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>day<span class=\"k\">);</span>","                form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_yearly_weekday_of_month_month]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>start_date<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                ","                <span class=\"c\">// Now when we have a start date, we can also do an ajax call to calculate occurrences:</span>","                loadOccurrences<span class=\"k\">(</span>start_date<span class=\"k\">,</span> rfc5545<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","","\t\t<span class=\"c\">// When the reload button is clicked, reload</span>","\t\tform<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'a.recurrenceinput_refresh_button'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>","\t\t    <span class=\"k\">function</span> <span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tevent<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","\t\t\tloadOccurrences<span class=\"k\">(</span>start_date<span class=\"k\">,</span>","\t\t\t    widget_save_to_rfc5545<span class=\"k\">(</span>form<span class=\"k\">,</span> conf<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">).</span>result<span class=\"k\">,</span>","\t\t\t    <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t    <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t    <span class=\"k\">}</span>","\t\t<span class=\"k\">);</span>","\t\t","            <span class=\"k\">}</span>            ","            ","            <span class=\"k\">if</span> <span class=\"k\">(</span>rfc5545<span class=\"k\">)</span> <span class=\"k\">{</span>","                widget_load_from_rfc5545<span class=\"k\">(</span>form<span class=\"k\">,</span> conf<span class=\"k\">,</span> rfc5545<span class=\"k\">);</span>","                <span class=\"c\">// check checkbox</span>","                display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_checkbox]'</span><span class=\"k\">)</span>","                    <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            ","            selector <span class=\"k\">=</span> form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_rtemplate]'</span><span class=\"k\">);</span>","            display_fields<span class=\"k\">(</span>selector<span class=\"k\">);</span>            ","        <span class=\"k\">}</span>","        ","        <span class=\"k\">function</span> recurrenceOn<span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> RFC5545 <span class=\"k\">=</span> widget_save_to_rfc5545<span class=\"k\">(</span>form<span class=\"k\">,</span> conf<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> label <span class=\"k\">=</span> display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'label[class=recurrenceinput_display]'</span><span class=\"k\">);</span>","            label<span class=\"k\">.</span>text<span class=\"k\">(</span>conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>display_label_activate <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> RFC5545<span class=\"k\">.</span>description<span class=\"k\">);</span>","            textarea<span class=\"k\">.</span>val<span class=\"k\">(</span>RFC5545<span class=\"k\">.</span>result<span class=\"k\">);</span>","\t    start_date <span class=\"k\">=</span> findStartDate<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>start_date <span class=\"k\">!==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tloadOccurrences<span class=\"k\">(</span>start_date<span class=\"k\">,</span> textarea<span class=\"k\">.</span>val<span class=\"k\">(),</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t    <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> recurrenceOff<span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> label <span class=\"k\">=</span> display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'label[class=recurrenceinput_display]'</span><span class=\"k\">);</span>","            label<span class=\"k\">.</span>text<span class=\"k\">(</span>conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>display_label_unactivate<span class=\"k\">);</span>","            textarea<span class=\"k\">.</span>val<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","            display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_occurrences'</span><span class=\"k\">).</span>hide<span class=\"k\">();</span>","\t<span class=\"k\">}</span>","","        <span class=\"k\">function</span> toggleRecurrence<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> checkbox <span class=\"k\">=</span> display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_checkbox]'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>checkbox<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                recurrenceOn<span class=\"k\">();</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                recurrenceOff<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> save<span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","            event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"c\">// close overlay</span>","            form<span class=\"k\">.</span>overlay<span class=\"k\">().</span>close<span class=\"k\">();</span>","            <span class=\"c\">// check checkbox</span>","            display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_checkbox]'</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            recurrenceOn<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> cancel<span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","            event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"c\">// close overlay</span>","            form<span class=\"k\">.</span>overlay<span class=\"k\">().</span>close<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">/* </span>","<span class=\"c\">          Load the templates</span>","<span class=\"c\">        */</span>","","        <span class=\"c\">// The widget</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>template<span class=\"k\">.</span>recurrenceinput_display <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            $<span class=\"k\">.</span>ajax<span class=\"k\">(</span><span class=\"k\">{</span>","                url<span class=\"k\">:</span> $<span class=\"k\">(</span>conf<span class=\"k\">.</span>template<span class=\"k\">.</span>display<span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>src<span class=\"k\">,</span>","                async<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                success<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","                    conf<span class=\"k\">.</span>template<span class=\"k\">.</span>display <span class=\"k\">=</span> data<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                error<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>request<span class=\"k\">,</span> status<span class=\"k\">,</span> error<span class=\"k\">)</span> <span class=\"k\">{</span>","                    alert<span class=\"k\">(</span>error<span class=\"k\">.</span>message <span class=\"k\">+</span> <span class=\"s\">\": \"</span> <span class=\"k\">+</span> error<span class=\"k\">.</span>filename<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            $<span class=\"k\">(</span>conf<span class=\"k\">.</span>template<span class=\"k\">.</span>display<span class=\"k\">).</span>template<span class=\"k\">(</span><span class=\"s\">'recurrenceinput_display'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        display <span class=\"k\">=</span> $<span class=\"k\">.</span>tmpl<span class=\"k\">(</span><span class=\"s\">'recurrenceinput_display'</span><span class=\"k\">,</span> conf<span class=\"k\">);</span>","","        <span class=\"c\">// The overlay = form popup</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>template<span class=\"k\">.</span>recurrenceinput_form <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            $<span class=\"k\">.</span>ajax<span class=\"k\">(</span><span class=\"k\">{</span>","                url<span class=\"k\">:</span> $<span class=\"k\">(</span>conf<span class=\"k\">.</span>template<span class=\"k\">.</span>form<span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>src<span class=\"k\">,</span>","                async<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","                success<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","                    conf<span class=\"k\">.</span>template<span class=\"k\">.</span>form <span class=\"k\">=</span> data<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                error<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>request<span class=\"k\">,</span> status<span class=\"k\">,</span> error<span class=\"k\">)</span> <span class=\"k\">{</span>","                    alert<span class=\"k\">(</span>error<span class=\"k\">.</span>message <span class=\"k\">+</span> <span class=\"s\">\": \"</span> <span class=\"k\">+</span> error<span class=\"k\">.</span>filename<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            $<span class=\"k\">(</span>conf<span class=\"k\">.</span>template<span class=\"k\">.</span>form<span class=\"k\">).</span>template<span class=\"k\">(</span><span class=\"s\">'recurrenceinput_form'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        form <span class=\"k\">=</span> $<span class=\"k\">.</span>tmpl<span class=\"k\">(</span><span class=\"s\">'recurrenceinput_form'</span><span class=\"k\">,</span> conf<span class=\"k\">);</span>","        <span class=\"c\">// Make an overlay</span>","        overlay_conf <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>conf<span class=\"k\">.</span>form_overlay<span class=\"k\">,</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","        <span class=\"c\">// Hide it</span>","        form<span class=\"k\">.</span>overlay<span class=\"k\">().</span>hide<span class=\"k\">();</span>","        ","        <span class=\"c\">// Make the date input into a calendar dateinput()</span>","        form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_range_by_end_date_calendar]'</span><span class=\"k\">).</span>dateinput<span class=\"k\">(</span><span class=\"k\">{</span>","            selectors<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            format<span class=\"k\">:</span> conf<span class=\"k\">.</span>i18n<span class=\"k\">.</span>short_date_format","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>textarea<span class=\"k\">.</span>val<span class=\"k\">())</span> <span class=\"k\">{</span>","            widget_load_from_rfc5545<span class=\"k\">(</span>form<span class=\"k\">,</span> conf<span class=\"k\">,</span> textarea<span class=\"k\">.</span>val<span class=\"k\">());</span>","            recurrenceOn<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">/* </span>","<span class=\"c\">          Do all the GUI stuff:</span>","<span class=\"c\">        */</span>","        ","        <span class=\"c\">// When you click on the checkbox, recurrence should toggle on/off.</span>","        display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'input[name=recurrenceinput_checkbox]'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>toggleRecurrence<span class=\"k\">);</span>","","        <span class=\"c\">// Show form overlay when you click on the \"Edit...\" link</span>","        display<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'a[name=recurrenceinput_edit]'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>","            <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// Load the form to set up the right fields to show, etc.</span>","                loadData<span class=\"k\">(</span>textarea<span class=\"k\">.</span>val<span class=\"k\">());</span>","                e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                form<span class=\"k\">.</span>overlay<span class=\"k\">().</span>load<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">);</span>","","        <span class=\"c\">// When selecting template, update what fieldsets are visible.</span>","        form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select[name=recurrenceinput_rtemplate]'</span><span class=\"k\">).</span>change<span class=\"k\">(</span>","            <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                display_fields<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">));</span>","            <span class=\"k\">}</span>","        <span class=\"k\">);</span>","","        <span class=\"c\">// When focus goes to a drop-down, select the relevant radiobutton.</span>","        form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'select'</span><span class=\"k\">).</span>change<span class=\"k\">(</span>","            <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>parent<span class=\"k\">().</span>find<span class=\"k\">(</span><span class=\"s\">'&gt; input'</span><span class=\"k\">).</span>click<span class=\"k\">().</span>change<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">);</span>","        ","        <span class=\"c\">/*</span>","<span class=\"c\">          Save and cancel methods:</span>","<span class=\"c\">        */</span>","        form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_cancel_button'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>cancel<span class=\"k\">);</span>","        form<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.recurrenceinput_save_button'</span><span class=\"k\">).</span>click<span class=\"k\">(</span>save<span class=\"k\">);</span>","        ","        <span class=\"c\">/*</span>","<span class=\"c\">         * Public API of RecurrenceInput</span>","<span class=\"c\">         */</span>","         ","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span>self<span class=\"k\">,</span> <span class=\"k\">{</span>","            display<span class=\"k\">:</span> display<span class=\"k\">,</span>","            form<span class=\"k\">:</span> form<span class=\"k\">,</span>","            loadData<span class=\"k\">:</span> loadData<span class=\"k\">,</span> <span class=\"c\">//Used by tests.</span>","\t    save<span class=\"k\">:</span> save <span class=\"c\">//Used by tests.</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">}</span>","","","    <span class=\"c\">/*</span>","<span class=\"c\">     * jQuery plugin implementation</span>","<span class=\"c\">     */</span>","    $<span class=\"k\">.</span>fn<span class=\"k\">.</span>recurrenceinput <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>conf<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'recurrenceinput'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"c\">// plugin already installed</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'recurrenceinput'</span><span class=\"k\">);</span> ","        <span class=\"k\">}</span>","        ","        <span class=\"c\">// \"compile\" configuration for widget</span>","        <span class=\"k\">var</span> config <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> tool<span class=\"k\">.</span>conf<span class=\"k\">);</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span>config<span class=\"k\">,</span> conf<span class=\"k\">);</span>","        $<span class=\"k\">.</span>extend<span class=\"k\">(</span>config<span class=\"k\">,</span> <span class=\"k\">{</span>i18n<span class=\"k\">:</span> LABELS<span class=\"k\">[</span>config<span class=\"k\">.</span>lang<span class=\"k\">],</span> name<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'name'</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"c\">// our recurrenceinput widget instance</span>","        <span class=\"k\">var</span> recurrenceinput <span class=\"k\">=</span> <span class=\"k\">new</span> RecurrenceInput<span class=\"k\">(</span>config<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"c\">// hide textarea and place display_widget after textarea</span>","        recurrenceinput<span class=\"k\">.</span>form<span class=\"k\">.</span>appendTo<span class=\"k\">(</span><span class=\"s\">'body'</span><span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>after<span class=\"k\">(</span>recurrenceinput<span class=\"k\">.</span>display<span class=\"k\">);</span>","        ","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>val<span class=\"k\">())</span> <span class=\"k\">{</span>","            recurrenceinput<span class=\"k\">.</span>display<span class=\"k\">.</span>find<span class=\"k\">(</span>","                <span class=\"s\">'input[name=recurrenceinput_checkbox]'</span>","            <span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        ","        <span class=\"c\">// hide the textarea</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>hide<span class=\"k\">();</span>","        ","        <span class=\"c\">// save the data for next call</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'recurrenceinput'</span><span class=\"k\">,</span> recurrenceinput<span class=\"k\">);</span>","        <span class=\"k\">return</span> recurrenceinput<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">(</span>jQuery<span class=\"k\">));</span>"];
_$jscoverage['jquery.recurrenceinput.js'][5]++;
(function ($) {
  _$jscoverage['jquery.recurrenceinput.js'][6]++;
  $.tools = ($.tools || {version: "@VERSION"});
  _$jscoverage['jquery.recurrenceinput.js'][8]++;
  var tool;
  _$jscoverage['jquery.recurrenceinput.js'][9]++;
  var LABELS = {};
  _$jscoverage['jquery.recurrenceinput.js'][11]++;
  tool = ($.tools.recurrenceinput = {conf: {lang: "en", readOnly: false, startField: null, ajaxURL: null, form_overlay: {speed: "fast", mask: {color: "#ebecff", loadSpeed: "fast", closeSpeed: "fast", opacity: 0.5}}, template: {form: "#jquery-recurrenceinput-form-tmpl", display: "#jquery-recurrenceinput-display-tmpl"}, rtemplate: {daily: {rrule: "FREQ=DAILY", fields: ["recurrenceinput_daily_interval", "recurrenceinput_range_options"]}, mondayfriday: {rrule: "FREQ=WEEKLY;BYDAY=MO,FR", fields: ["recurrenceinput_range_options"]}, weekdays: {rrule: "FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR", fields: ["recurrenceinput_range_options"]}, weekly: {rrule: "FREQ=WEEKLY", fields: ["recurrenceinput_weekly_interval", "recurrenceinput_weekly_weekdays", "recurrenceinput_range_options"]}, monthly: {rrule: "FREQ=MONTHLY", fields: ["recurrenceinput_monthly_options", "recurrenceinput_range_options"]}, yearly: {rrule: "FREQ=YEARLY", fields: ["recurrenceinput_yearly_options", "recurrenceinput_range_options"]}}}, localize: (function (language, labels) {
  _$jscoverage['jquery.recurrenceinput.js'][85]++;
  LABELS[language] = labels;
}), setTemplates: (function (templates, titles) {
  _$jscoverage['jquery.recurrenceinput.js'][89]++;
  var lang, template;
  _$jscoverage['jquery.recurrenceinput.js'][90]++;
  tool.conf.rtemplate = templates;
  _$jscoverage['jquery.recurrenceinput.js'][91]++;
  for (lang in titles) {
    _$jscoverage['jquery.recurrenceinput.js'][92]++;
    if (titles.hasOwnProperty(lang)) {
      _$jscoverage['jquery.recurrenceinput.js'][93]++;
      for (template in titles[lang]) {
        _$jscoverage['jquery.recurrenceinput.js'][94]++;
        if (titles[lang].hasOwnProperty(template)) {
          _$jscoverage['jquery.recurrenceinput.js'][95]++;
          LABELS[lang].rtemplate[template] = titles[lang][template];
        }
}
    }
}
})});
  _$jscoverage['jquery.recurrenceinput.js'][104]++;
  tool.localize("en", {display_label_unactivate: "Does not repeat", display_label_activate: "Repeats ", edit: "Edit...", recurrence_type: "Recurrence type:", daily_interval_1: "Every", daily_interval_2: "days", weekly_interval_1: "Every", weekly_interval_2: "week(s)", weekly_weekdays: "On:", monthly_day_of_month_1: "Day", monthly_day_of_month_2: "of the month", monthly_day_of_month_3: ", every", monthly_day_of_month_4: "month(s)", monthly_weekday_of_month_1: "The", monthly_weekday_of_month_2: "", monthly_weekday_of_month_3: ", every", monthly_weekday_of_month_4: "month(s)", yearly_day_of_month_1: "Every", yearly_day_of_month_2: "", yearly_day_of_month_3: "", yearly_weekday_of_month_1: "The", yearly_weekday_of_month_2: "", yearly_weekday_of_month_3: "of", yearly_weekday_of_month_4: "", range_label: "End recurrance:", range_no_end_label: "No end", range_by_occurrences_label_1: "Ending after", range_by_occurrences_label_2: "occurrence(s)", range_by_end_date_label: "Until ", including_label: ",and also ", except_label: ", except for", cancel_button_label: "Cancel", save_button_label: "Save", order_indexes: ["First", "Second", "Third", "Fourth", "Last"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], short_months: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], weekdays: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], short_weekdays: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], long_date_format: "mmmm dd, yyyy", short_date_format: "mm/dd/yyyy", no_template_match: "Warning: This event uses recurrence features not supported by this widget. Saving the recurrence may change the recurrence in unintended ways.", rtemplate: {daily: "Daily", mondayfriday: "Mondays and Fridays", weekdays: "Weekdays", weekly: "Weekly", monthly: "Monthly", yearly: "Yearly"}});
  _$jscoverage['jquery.recurrenceinput.js'][178]++;
  var OCCURRENCE_TMPL = ["<div class=\"recurrenceinput_occurrences\"><hr/>", "{{each occurrences}}", "<div class=\"occurrence>", "<span class=\"date ${occurrences[$index].type}\">", "${occurrences[$index].formatted_date}", "</span>", "{{if !readOnly}}", "<span class=\"action\">", "{{if occurrences[$index].type === \"rrule\"}}", "<a date=\"${occurrences[$index].date}\" href=\"#\"", "class=\"${occurrences[$index].type}\" >", "Exclude", "</a>", "{{/if}}", "{{if occurrences[$index].type === \"rdate\"}}", "<a date=\"${occurrences[$index].date}\" href=\"#\"", "class=\"${occurrences[$index].type}\" >", "Remove", "</a>", "{{/if}}", "{{if occurrences[$index].type === \"exdate\"}}", "<a date=\"${occurrences[$index].date}\" href=\"#\"", "class=\"${occurrences[$index].type}\" >", "Include", "</a>", "{{/if}}", "</span>", "{{/if}}", "</div>", "{{/each}}", "<div class=\"batching\">", "{{each batch.batches}}", "{{if $index === batch.current_batch}}<span class=\"current\">{{/if}}", "<a href=\"#\" start=\"${batch.batches[$index][0]}\">[${batch.batches[$index][0]} - ${batch.batches[$index][1]}]</a>", "{{if $index === batch.current_batch}}</span>{{/if}}", "{{/each}}", "</div></div>"].join("\n");
  _$jscoverage['jquery.recurrenceinput.js'][216]++;
  $.template("occurrence_tmpl", OCCURRENCE_TMPL);
  _$jscoverage['jquery.recurrenceinput.js'][220]++;
  var Re = /d{1,4}|m{1,4}|yy(?:yy)?|"[^"]*"|'[^']*'/g;
  _$jscoverage['jquery.recurrenceinput.js'][222]++;
  function zeropad(val, len) {
    _$jscoverage['jquery.recurrenceinput.js'][223]++;
    val = ("" + val);
    _$jscoverage['jquery.recurrenceinput.js'][224]++;
    len = (len || 2);
    _$jscoverage['jquery.recurrenceinput.js'][225]++;
    while ((val.length < len)) {
      _$jscoverage['jquery.recurrenceinput.js'][225]++;
      val = ("0" + val);
}
    _$jscoverage['jquery.recurrenceinput.js'][226]++;
    return val;
}
  _$jscoverage['jquery.recurrenceinput.js'][229]++;
  function format(date, fmt, conf) {
    _$jscoverage['jquery.recurrenceinput.js'][231]++;
    var d = date.getDate(), D = date.getDay(), m = date.getMonth(), y = date.getFullYear(), flags = {d: d, dd: zeropad(d), ddd: conf.i18n.short_weekdays[D], dddd: conf.i18n.weekdays[D], m: (m + 1), mm: zeropad((m + 1)), mmm: conf.i18n.short_months[m], mmmm: conf.i18n.months[m], yy: String(y).slice(2), yyyy: y};
    _$jscoverage['jquery.recurrenceinput.js'][249]++;
    var result = fmt.replace(Re, (function ($0) {
  _$jscoverage['jquery.recurrenceinput.js'][250]++;
  return (($0 in flags)? flags[$0]: $0.slice(1, ($0.length - 1)));
}));
    _$jscoverage['jquery.recurrenceinput.js'][253]++;
    return result;
}
  _$jscoverage['jquery.recurrenceinput.js'][260]++;
  function widget_save_to_rfc5545(form, conf, tz) {
    _$jscoverage['jquery.recurrenceinput.js'][261]++;
    var value = form.find("select[name=recurrenceinput_rtemplate]").val();
    _$jscoverage['jquery.recurrenceinput.js'][262]++;
    var rtemplate = conf.rtemplate[value];
    _$jscoverage['jquery.recurrenceinput.js'][263]++;
    var result = rtemplate.rrule;
    _$jscoverage['jquery.recurrenceinput.js'][264]++;
    var human = conf.i18n.rtemplate[value];
    _$jscoverage['jquery.recurrenceinput.js'][265]++;
    var field, input, weekdays, i18nweekdays, i, j, index, tmp;
    _$jscoverage['jquery.recurrenceinput.js'][266]++;
    var day, month, year, interval, yearly_type, occurrences, date;
    _$jscoverage['jquery.recurrenceinput.js'][268]++;
    for (i = 0; (i < rtemplate.fields.length); (i++)) {
      _$jscoverage['jquery.recurrenceinput.js'][269]++;
      field = form.find(("#" + rtemplate.fields[i]));
      _$jscoverage['jquery.recurrenceinput.js'][271]++;
      switch (field.attr("id")) {
      case "recurrenceinput_daily_interval":
        _$jscoverage['jquery.recurrenceinput.js'][274]++;
        input = field.find("input[name=recurrenceinput_daily_interval]");
        _$jscoverage['jquery.recurrenceinput.js'][275]++;
        result += (";INTERVAL=" + input.val());
        _$jscoverage['jquery.recurrenceinput.js'][276]++;
        human = (conf.i18n.daily_interval_1 + " " + input.val() + " " + conf.i18n.daily_interval_2);
        _$jscoverage['jquery.recurrenceinput.js'][277]++;
        break;
      case "recurrenceinput_weekly_interval":
        _$jscoverage['jquery.recurrenceinput.js'][280]++;
        input = field.find("input[name=recurrenceinput_weekly_interval]");
        _$jscoverage['jquery.recurrenceinput.js'][281]++;
        result += (";INTERVAL=" + input.val());
        _$jscoverage['jquery.recurrenceinput.js'][282]++;
        human = (conf.i18n.weekly_interval_1 + " " + input.val() + " " + conf.i18n.weekly_interval_2);
        _$jscoverage['jquery.recurrenceinput.js'][283]++;
        break;
      case "recurrenceinput_weekly_weekdays":
        _$jscoverage['jquery.recurrenceinput.js'][286]++;
        weekdays = "";
        _$jscoverage['jquery.recurrenceinput.js'][287]++;
        i18nweekdays = "";
        _$jscoverage['jquery.recurrenceinput.js'][288]++;
        for (j = 0; (j < conf.weekdays.length); (j++)) {
          _$jscoverage['jquery.recurrenceinput.js'][289]++;
          input = field.find(("input[name=recurrenceinput_weekly_weekdays_" + conf.weekdays[j] + "]"));
          _$jscoverage['jquery.recurrenceinput.js'][290]++;
          if (input.is(":checked")) {
            _$jscoverage['jquery.recurrenceinput.js'][291]++;
            if (weekdays) {
              _$jscoverage['jquery.recurrenceinput.js'][292]++;
              weekdays += ",";
              _$jscoverage['jquery.recurrenceinput.js'][293]++;
              i18nweekdays += ", ";
            }
            _$jscoverage['jquery.recurrenceinput.js'][295]++;
            weekdays += conf.weekdays[j];
            _$jscoverage['jquery.recurrenceinput.js'][296]++;
            i18nweekdays += conf.i18n.weekdays[j];
          }
}
        _$jscoverage['jquery.recurrenceinput.js'][299]++;
        if (weekdays) {
          _$jscoverage['jquery.recurrenceinput.js'][300]++;
          result += (";BYDAY=" + weekdays);
          _$jscoverage['jquery.recurrenceinput.js'][301]++;
          human += (" " + conf.i18n.weekly_weekdays + " " + i18nweekdays);
        }
        _$jscoverage['jquery.recurrenceinput.js'][303]++;
        break;
      case "recurrenceinput_monthly_options":
        _$jscoverage['jquery.recurrenceinput.js'][306]++;
        var monthly_type = $("input[name=recurrenceinput_monthly_type]:checked", form).val();
        _$jscoverage['jquery.recurrenceinput.js'][307]++;
        switch (monthly_type) {
        case "DAY_OF_MONTH":
          _$jscoverage['jquery.recurrenceinput.js'][310]++;
          day = $("select[name=recurrenceinput_monthly_day_of_month_day]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][311]++;
          interval = $("input[name=recurrenceinput_monthly_day_of_month_interval]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][312]++;
          result += (";BYMONTHDAY=" + day);
          _$jscoverage['jquery.recurrenceinput.js'][313]++;
          result += (";INTERVAL=" + interval);
          _$jscoverage['jquery.recurrenceinput.js'][314]++;
          human += (", " + conf.i18n.monthly_day_of_month_1 + " " + day + " " + conf.i18n.monthly_day_of_month_2);
          _$jscoverage['jquery.recurrenceinput.js'][315]++;
          if ((interval !== 1)) {
            _$jscoverage['jquery.recurrenceinput.js'][316]++;
            human += (conf.i18n.monthly_day_of_month_3 + " " + interval + " " + conf.i18n.monthly_day_of_month_4);
          }
          _$jscoverage['jquery.recurrenceinput.js'][318]++;
          break;
        case "WEEKDAY_OF_MONTH":
          _$jscoverage['jquery.recurrenceinput.js'][320]++;
          index = $("select[name=recurrenceinput_monthly_weekday_of_month_index]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][321]++;
          day = $("select[name=recurrenceinput_monthly_weekday_of_month]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][322]++;
          interval = $("input[name=recurrenceinput_monthly_weekday_of_month_interval]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][323]++;
          if (($.inArray(day, ["MO", "TU", "WE", "TH", "FR", "SA", "SU"]) > -1)) {
            _$jscoverage['jquery.recurrenceinput.js'][324]++;
            result += (";BYDAY=" + index + day);
            _$jscoverage['jquery.recurrenceinput.js'][325]++;
            human += (", " + conf.i18n.monthly_weekday_of_month_1 + " ");
            _$jscoverage['jquery.recurrenceinput.js'][326]++;
            human += (" " + conf.i18n.order_indexes[conf.order_indexes.indexOf(index)]);
            _$jscoverage['jquery.recurrenceinput.js'][327]++;
            human += (" " + conf.i18n.monthly_weekday_of_month_2);
            _$jscoverage['jquery.recurrenceinput.js'][328]++;
            human += (" " + conf.i18n.weekdays[conf.weekdays.indexOf(day)]);
          }
          _$jscoverage['jquery.recurrenceinput.js'][330]++;
          result += (";INTERVAL=" + interval);
          _$jscoverage['jquery.recurrenceinput.js'][331]++;
          if ((interval !== 1)) {
            _$jscoverage['jquery.recurrenceinput.js'][332]++;
            human += (" " + conf.i18n.monthly_weekday_of_month_3 + " " + interval + " " + conf.i18n.monthly_weekday_of_month_4);
          }
          _$jscoverage['jquery.recurrenceinput.js'][334]++;
          break;
        }
        _$jscoverage['jquery.recurrenceinput.js'][336]++;
        break;
      case "recurrenceinput_yearly_options":
        _$jscoverage['jquery.recurrenceinput.js'][339]++;
        yearly_type = $("input[name=recurrenceinput_yearly_type]:checked", form).val();
        _$jscoverage['jquery.recurrenceinput.js'][340]++;
        switch (yearly_type) {
        case "DAY_OF_MONTH":
          _$jscoverage['jquery.recurrenceinput.js'][343]++;
          month = $("select[name=recurrenceinput_yearly_day_of_month]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][344]++;
          day = $("select[name=recurrenceinput_yearly_day_of_month_index]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][345]++;
          result += (";BYMONTH=" + month);
          _$jscoverage['jquery.recurrenceinput.js'][346]++;
          result += (";BYMONTHDAY=" + day);
          _$jscoverage['jquery.recurrenceinput.js'][347]++;
          human += (", " + conf.i18n.months[(month - 1)] + " " + day);
          _$jscoverage['jquery.recurrenceinput.js'][348]++;
          break;
        case "WEEKDAY_OF_MONTH":
          _$jscoverage['jquery.recurrenceinput.js'][350]++;
          index = $("select[name=recurrenceinput_yearly_weekday_of_month_index]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][351]++;
          day = $("select[name=recurrenceinput_yearly_weekday_of_month_day]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][352]++;
          month = $("select[name=recurrenceinput_yearly_weekday_of_month_month]", form).val();
          _$jscoverage['jquery.recurrenceinput.js'][353]++;
          result += (";BYMONTH=" + month);
          _$jscoverage['jquery.recurrenceinput.js'][354]++;
          if (($.inArray(day, ["MO", "TU", "WE", "TH", "FR", "SA", "SU"]) > -1)) {
            _$jscoverage['jquery.recurrenceinput.js'][355]++;
            result += (";BYDAY=" + index + day);
            _$jscoverage['jquery.recurrenceinput.js'][356]++;
            human += (", " + conf.i18n.yearly_weekday_of_month_1);
            _$jscoverage['jquery.recurrenceinput.js'][357]++;
            human += (" " + conf.i18n.order_indexes[conf.order_indexes.indexOf(index)]);
            _$jscoverage['jquery.recurrenceinput.js'][358]++;
            human += (" " + conf.i18n.yearly_weekday_of_month_2);
            _$jscoverage['jquery.recurrenceinput.js'][359]++;
            human += (" " + conf.i18n.weekdays[conf.weekdays.indexOf(day)]);
            _$jscoverage['jquery.recurrenceinput.js'][360]++;
            human += (" " + conf.i18n.yearly_weekday_of_month_3);
            _$jscoverage['jquery.recurrenceinput.js'][361]++;
            human += (" " + conf.i18n.months[(month - 1)]);
            _$jscoverage['jquery.recurrenceinput.js'][362]++;
            human += (" " + conf.i18n.yearly_weekday_of_month_4);
          }
          _$jscoverage['jquery.recurrenceinput.js'][364]++;
          break;
        }
        _$jscoverage['jquery.recurrenceinput.js'][366]++;
        break;
      case "recurrenceinput_range_options":
        _$jscoverage['jquery.recurrenceinput.js'][369]++;
        var range_type = form.find("input[name=recurrenceinput_range_type]:checked").val();
        _$jscoverage['jquery.recurrenceinput.js'][370]++;
        switch (range_type) {
        case "BY_OCCURRENCES":
          _$jscoverage['jquery.recurrenceinput.js'][373]++;
          occurrences = form.find("input[name=recurrenceinput_range_by_occurrences_value]").val();
          _$jscoverage['jquery.recurrenceinput.js'][374]++;
          result += (";COUNT=" + occurrences);
          _$jscoverage['jquery.recurrenceinput.js'][375]++;
          human += (", " + conf.i18n.range_by_occurrences_label_1);
          _$jscoverage['jquery.recurrenceinput.js'][376]++;
          human += (" " + occurrences);
          _$jscoverage['jquery.recurrenceinput.js'][377]++;
          human += (" " + conf.i18n.range_by_occurrences_label_2);
          _$jscoverage['jquery.recurrenceinput.js'][378]++;
          break;
        case "BY_END_DATE":
          _$jscoverage['jquery.recurrenceinput.js'][380]++;
          field = form.find("input[name=recurrenceinput_range_by_end_date_calendar]");
          _$jscoverage['jquery.recurrenceinput.js'][381]++;
          date = field.data("dateinput").getValue("yyyymmdd");
          _$jscoverage['jquery.recurrenceinput.js'][382]++;
          result += (";UNTIL=" + date + "T000000");
          _$jscoverage['jquery.recurrenceinput.js'][383]++;
          if ((tz === true)) {
            _$jscoverage['jquery.recurrenceinput.js'][385]++;
            result += "Z";
          }
          _$jscoverage['jquery.recurrenceinput.js'][387]++;
          human += (", " + conf.i18n.range_by_end_date_label);
          _$jscoverage['jquery.recurrenceinput.js'][388]++;
          human += (" " + field.data("dateinput").getValue(conf.i18n.long_date_format));
          _$jscoverage['jquery.recurrenceinput.js'][389]++;
          break;
        }
        _$jscoverage['jquery.recurrenceinput.js'][391]++;
        break;
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][395]++;
    if (((form.ical.RDATE !== undefined) && (form.ical.RDATE.length > 0))) {
      _$jscoverage['jquery.recurrenceinput.js'][396]++;
      tmp = [];
      _$jscoverage['jquery.recurrenceinput.js'][397]++;
      for (i = 0; (i < form.ical.RDATE.length); (i++)) {
        _$jscoverage['jquery.recurrenceinput.js'][398]++;
        if ((form.ical.RDATE[i] != "")) {
          _$jscoverage['jquery.recurrenceinput.js'][399]++;
          year = parseInt(form.ical.RDATE[i].substring(0, 4), 10);
          _$jscoverage['jquery.recurrenceinput.js'][400]++;
          month = (parseInt(form.ical.RDATE[i].substring(4, 6), 10) - 1);
          _$jscoverage['jquery.recurrenceinput.js'][401]++;
          day = parseInt(form.ical.RDATE[i].substring(6, 8), 10);
          _$jscoverage['jquery.recurrenceinput.js'][402]++;
          tmp.push(format(new Date(year, month, day), conf.i18n.long_date_format, conf));
        }
}
      _$jscoverage['jquery.recurrenceinput.js'][405]++;
      if ((tmp.length !== 0)) {
        _$jscoverage['jquery.recurrenceinput.js'][406]++;
        human = (human + conf.i18n.including_label + " " + tmp.join("; "));
      }
    }
    _$jscoverage['jquery.recurrenceinput.js'][410]++;
    if (((form.ical.EXDATE !== undefined) && (form.ical.EXDATE.length > 0))) {
      _$jscoverage['jquery.recurrenceinput.js'][411]++;
      tmp = [];
      _$jscoverage['jquery.recurrenceinput.js'][412]++;
      for (i = 0; (i < form.ical.EXDATE.length); (i++)) {
        _$jscoverage['jquery.recurrenceinput.js'][413]++;
        if ((form.ical.EXDATE[i] != "")) {
          _$jscoverage['jquery.recurrenceinput.js'][414]++;
          year = parseInt(form.ical.EXDATE[i].substring(0, 4), 10);
          _$jscoverage['jquery.recurrenceinput.js'][415]++;
          month = (parseInt(form.ical.EXDATE[i].substring(4, 6), 10) - 1);
          _$jscoverage['jquery.recurrenceinput.js'][416]++;
          day = parseInt(form.ical.EXDATE[i].substring(6, 8), 10);
          _$jscoverage['jquery.recurrenceinput.js'][417]++;
          tmp.push(format(new Date(year, month, day), conf.i18n.long_date_format, conf));
        }
}
      _$jscoverage['jquery.recurrenceinput.js'][420]++;
      if ((tmp.length !== 0)) {
        _$jscoverage['jquery.recurrenceinput.js'][421]++;
        human = (human + conf.i18n.except_label + " " + tmp.join("; "));
      }
    }
    _$jscoverage['jquery.recurrenceinput.js'][424]++;
    result = ("RRULE:" + result);
    _$jscoverage['jquery.recurrenceinput.js'][425]++;
    if (((form.ical.EXDATE !== undefined) && (form.ical.EXDATE.join() !== ""))) {
      _$jscoverage['jquery.recurrenceinput.js'][426]++;
      result = (result + "\nEXDATE:" + form.ical.EXDATE);
    }
    _$jscoverage['jquery.recurrenceinput.js'][428]++;
    if (((form.ical.RDATE !== undefined) && (form.ical.RDATE.join() !== ""))) {
      _$jscoverage['jquery.recurrenceinput.js'][429]++;
      result = (result + "\nRDATE:" + form.ical.RDATE);
    }
    _$jscoverage['jquery.recurrenceinput.js'][431]++;
    return ({result: result, description: human});
}
  _$jscoverage['jquery.recurrenceinput.js'][434]++;
  function parseLine(icalline) {
    _$jscoverage['jquery.recurrenceinput.js'][435]++;
    var result = {};
    _$jscoverage['jquery.recurrenceinput.js'][436]++;
    var pos = icalline.indexOf(":");
    _$jscoverage['jquery.recurrenceinput.js'][437]++;
    var property = icalline.substring(0, pos);
    _$jscoverage['jquery.recurrenceinput.js'][438]++;
    result.value = icalline.substring((pos + 1));
    _$jscoverage['jquery.recurrenceinput.js'][440]++;
    if ((property.indexOf(";") !== -1)) {
      _$jscoverage['jquery.recurrenceinput.js'][441]++;
      pos = property.indexOf(";");
      _$jscoverage['jquery.recurrenceinput.js'][442]++;
      result.parameters = property.substring((pos + 1));
      _$jscoverage['jquery.recurrenceinput.js'][443]++;
      result.property = property.substring(0, pos);
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][445]++;
      result.parameters = null;
      _$jscoverage['jquery.recurrenceinput.js'][446]++;
      result.property = property;
    }
    _$jscoverage['jquery.recurrenceinput.js'][448]++;
    return result;
}
  _$jscoverage['jquery.recurrenceinput.js'][451]++;
  function cleanDates(dates) {
    _$jscoverage['jquery.recurrenceinput.js'][454]++;
    var result = [];
    _$jscoverage['jquery.recurrenceinput.js'][455]++;
    var split_dates = dates.split(",");
    _$jscoverage['jquery.recurrenceinput.js'][456]++;
    var date;
    _$jscoverage['jquery.recurrenceinput.js'][458]++;
    for (date in split_dates) {
      _$jscoverage['jquery.recurrenceinput.js'][459]++;
      if (split_dates.hasOwnProperty(date)) {
        _$jscoverage['jquery.recurrenceinput.js'][460]++;
        if ((split_dates[date].indexOf("Z") !== -1)) {
          _$jscoverage['jquery.recurrenceinput.js'][461]++;
          result.push(split_dates[date].substring(0, 15));
        }
        else {
          _$jscoverage['jquery.recurrenceinput.js'][463]++;
          result.push(split_dates[date]);
        }
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][467]++;
    return result;
}
  _$jscoverage['jquery.recurrenceinput.js'][470]++;
  function parseIcal(icaldata) {
    _$jscoverage['jquery.recurrenceinput.js'][471]++;
    var lines = [];
    _$jscoverage['jquery.recurrenceinput.js'][472]++;
    var result = {};
    _$jscoverage['jquery.recurrenceinput.js'][473]++;
    var propAndValue = [];
    _$jscoverage['jquery.recurrenceinput.js'][474]++;
    var line = null;
    _$jscoverage['jquery.recurrenceinput.js'][475]++;
    var nextline;
    _$jscoverage['jquery.recurrenceinput.js'][477]++;
    lines = icaldata.split("\n");
    _$jscoverage['jquery.recurrenceinput.js'][478]++;
    lines.reverse();
    _$jscoverage['jquery.recurrenceinput.js'][479]++;
    while (true) {
      _$jscoverage['jquery.recurrenceinput.js'][480]++;
      if ((lines.length > 0)) {
        _$jscoverage['jquery.recurrenceinput.js'][481]++;
        nextline = lines.pop();
        _$jscoverage['jquery.recurrenceinput.js'][482]++;
        if (((nextline.charAt(0) === " ") || (nextline.charAt(0) === "\t"))) {
          _$jscoverage['jquery.recurrenceinput.js'][484]++;
          line = (line + nextline);
          _$jscoverage['jquery.recurrenceinput.js'][485]++;
          continue;
        }
      }
      else {
        _$jscoverage['jquery.recurrenceinput.js'][488]++;
        nextline = "";
      }
      _$jscoverage['jquery.recurrenceinput.js'][492]++;
      if ((line !== null)) {
        _$jscoverage['jquery.recurrenceinput.js'][493]++;
        line = parseLine(line);
        _$jscoverage['jquery.recurrenceinput.js'][495]++;
        if (((line.property === "RDATE") || (line.property === "EXDATE"))) {
          _$jscoverage['jquery.recurrenceinput.js'][496]++;
          result[line.property] = cleanDates(line.value);
        }
        else {
          _$jscoverage['jquery.recurrenceinput.js'][498]++;
          result[line.property] = line.value;
        }
      }
      _$jscoverage['jquery.recurrenceinput.js'][502]++;
      line = nextline;
      _$jscoverage['jquery.recurrenceinput.js'][503]++;
      if ((line === "")) {
        _$jscoverage['jquery.recurrenceinput.js'][504]++;
        break;
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][507]++;
    return result;
}
  _$jscoverage['jquery.recurrenceinput.js'][510]++;
  function widget_load_from_rfc5545(form, conf, icaldata) {
    _$jscoverage['jquery.recurrenceinput.js'][511]++;
    var unsupported_features = false;
    _$jscoverage['jquery.recurrenceinput.js'][512]++;
    var i, matches, match, match_index, rtemplate, d, input, index;
    _$jscoverage['jquery.recurrenceinput.js'][513]++;
    var selector, selectors, field, radiobutton, start, end;
    _$jscoverage['jquery.recurrenceinput.js'][514]++;
    var interval, byday, bymonth, bymonthday, bysetpos, count, until;
    _$jscoverage['jquery.recurrenceinput.js'][515]++;
    var day, month, year, weekday, ical;
    _$jscoverage['jquery.recurrenceinput.js'][517]++;
    form.ical = parseIcal(icaldata);
    _$jscoverage['jquery.recurrenceinput.js'][519]++;
    matches = /INTERVAL=([0-9]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][520]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][521]++;
      interval = matches[1];
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][523]++;
      interval = "1";
    }
    _$jscoverage['jquery.recurrenceinput.js'][526]++;
    matches = /BYDAY=([^;]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][527]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][528]++;
      byday = matches[1];
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][530]++;
      byday = "";
    }
    _$jscoverage['jquery.recurrenceinput.js'][533]++;
    matches = /BYMONTHDAY=([^;]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][534]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][535]++;
      bymonthday = matches[1].split(",");
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][537]++;
      bymonthday = null;
    }
    _$jscoverage['jquery.recurrenceinput.js'][540]++;
    matches = /BYMONTH=([^;]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][541]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][542]++;
      bymonth = matches[1].split(",");
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][544]++;
      bymonth = null;
    }
    _$jscoverage['jquery.recurrenceinput.js'][547]++;
    matches = /BYSETPOS=([^;]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][548]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][549]++;
      bysetpos = matches[1];
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][551]++;
      bysetpos = null;
    }
    _$jscoverage['jquery.recurrenceinput.js'][554]++;
    matches = /COUNT=([0-9]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][555]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][556]++;
      count = matches[1];
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][558]++;
      count = null;
    }
    _$jscoverage['jquery.recurrenceinput.js'][561]++;
    matches = /UNTIL=([0-9T]+);?/.exec(form.ical.RRULE);
    _$jscoverage['jquery.recurrenceinput.js'][562]++;
    if (matches) {
      _$jscoverage['jquery.recurrenceinput.js'][563]++;
      until = matches[1];
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][565]++;
      until = null;
    }
    _$jscoverage['jquery.recurrenceinput.js'][569]++;
    match = "";
    _$jscoverage['jquery.recurrenceinput.js'][570]++;
    match_index = null;
    _$jscoverage['jquery.recurrenceinput.js'][571]++;
    for (i in conf.rtemplate) {
      _$jscoverage['jquery.recurrenceinput.js'][572]++;
      if (conf.rtemplate.hasOwnProperty(i)) {
        _$jscoverage['jquery.recurrenceinput.js'][573]++;
        rtemplate = conf.rtemplate[i];
        _$jscoverage['jquery.recurrenceinput.js'][574]++;
        if ((form.ical.RRULE.indexOf(rtemplate.rrule) === 0)) {
          _$jscoverage['jquery.recurrenceinput.js'][575]++;
          if ((form.ical.RRULE.length > match.length)) {
            _$jscoverage['jquery.recurrenceinput.js'][577]++;
            match = form.ical.RRULE;
            _$jscoverage['jquery.recurrenceinput.js'][578]++;
            match_index = i;
          }
        }
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][584]++;
    if (match) {
      _$jscoverage['jquery.recurrenceinput.js'][585]++;
      rtemplate = conf.rtemplate[match_index];
      _$jscoverage['jquery.recurrenceinput.js'][587]++;
      selector = form.find("select[name=recurrenceinput_rtemplate]").val(match_index);
    }
    else {
      _$jscoverage['jquery.recurrenceinput.js'][589]++;
      for (rtemplate in conf.rtemplate) {
        _$jscoverage['jquery.recurrenceinput.js'][590]++;
        if (conf.rtemplate.hasOwnProperty(rtemplate)) {
          _$jscoverage['jquery.recurrenceinput.js'][591]++;
          rtemplate = conf.rtemplate[rtemplate];
          _$jscoverage['jquery.recurrenceinput.js'][592]++;
          break;
        }
}
      _$jscoverage['jquery.recurrenceinput.js'][595]++;
      unsupported_features = true;
    }
    _$jscoverage['jquery.recurrenceinput.js'][598]++;
    for (i = 0; (i < rtemplate.fields.length); (i++)) {
      _$jscoverage['jquery.recurrenceinput.js'][599]++;
      field = form.find(("#" + rtemplate.fields[i]));
      _$jscoverage['jquery.recurrenceinput.js'][600]++;
      switch (field.attr("id")) {
      case "recurrenceinput_daily_interval":
        _$jscoverage['jquery.recurrenceinput.js'][603]++;
        field.find("input[name=recurrenceinput_daily_interval]").val(interval);
        _$jscoverage['jquery.recurrenceinput.js'][604]++;
        break;
      case "recurrenceinput_weekly_interval":
        _$jscoverage['jquery.recurrenceinput.js'][607]++;
        field.find("input[name=recurrenceinput_weekly_interval]").val(interval);
        _$jscoverage['jquery.recurrenceinput.js'][608]++;
        break;
      case "recurrenceinput_weekly_weekdays":
        _$jscoverage['jquery.recurrenceinput.js'][611]++;
        for (d = 0; (d < conf.weekdays.length); (d++)) {
          _$jscoverage['jquery.recurrenceinput.js'][612]++;
          day = conf.weekdays[d];
          _$jscoverage['jquery.recurrenceinput.js'][613]++;
          input = field.find(("input[name=recurrenceinput_weekly_weekdays_" + day + "]"));
          _$jscoverage['jquery.recurrenceinput.js'][614]++;
          input.attr("checked", (byday.indexOf(day) !== -1));
}
        _$jscoverage['jquery.recurrenceinput.js'][616]++;
        break;
      case "recurrenceinput_monthly_options":
        _$jscoverage['jquery.recurrenceinput.js'][619]++;
        var monthly_type = "DAY_OF_MONTH";
        _$jscoverage['jquery.recurrenceinput.js'][621]++;
        if (bymonthday) {
          _$jscoverage['jquery.recurrenceinput.js'][622]++;
          monthly_type = "DAY_OF_MONTH";
          _$jscoverage['jquery.recurrenceinput.js'][623]++;
          if ((bymonthday.indexOf(",") !== -1)) {
            _$jscoverage['jquery.recurrenceinput.js'][625]++;
            unsupported_features = true;
            _$jscoverage['jquery.recurrenceinput.js'][627]++;
            bymonthday = bymonthday.split(",")[0];
          }
          _$jscoverage['jquery.recurrenceinput.js'][629]++;
          field.find("select[name=recurrenceinput_monthly_day_of_month_day]").val(bymonthday);
          _$jscoverage['jquery.recurrenceinput.js'][630]++;
          field.find("input[name=recurrenceinput_monthly_day_of_month_interval]").val(interval);
        }
        _$jscoverage['jquery.recurrenceinput.js'][633]++;
        if (byday) {
          _$jscoverage['jquery.recurrenceinput.js'][634]++;
          monthly_type = "WEEKDAY_OF_MONTH";
          _$jscoverage['jquery.recurrenceinput.js'][636]++;
          if ((byday.indexOf(",") !== -1)) {
            _$jscoverage['jquery.recurrenceinput.js'][638]++;
            unsupported_features = true;
            _$jscoverage['jquery.recurrenceinput.js'][639]++;
            byday = byday.split(",")[0];
          }
          _$jscoverage['jquery.recurrenceinput.js'][641]++;
          index = byday.slice(0, -2);
          _$jscoverage['jquery.recurrenceinput.js'][642]++;
          weekday = byday.slice(-2);
          _$jscoverage['jquery.recurrenceinput.js'][643]++;
          field.find("select[name=recurrenceinput_monthly_weekday_of_month_index]").val(index);
          _$jscoverage['jquery.recurrenceinput.js'][644]++;
          field.find("select[name=recurrenceinput_monthly_weekday_of_month]").val(weekday);
          _$jscoverage['jquery.recurrenceinput.js'][645]++;
          field.find("input[name=recurrenceinput_monthly_weekday_of_month_interval]").val(interval);
        }
        _$jscoverage['jquery.recurrenceinput.js'][648]++;
        selectors = field.find("input[name=recurrenceinput_monthly_type]");
        _$jscoverage['jquery.recurrenceinput.js'][649]++;
        for (index = 0; (index < selectors.length); (index++)) {
          _$jscoverage['jquery.recurrenceinput.js'][650]++;
          radiobutton = selectors[index];
          _$jscoverage['jquery.recurrenceinput.js'][651]++;
          $(radiobutton).attr("checked", (radiobutton.value === monthly_type));
}
        _$jscoverage['jquery.recurrenceinput.js'][653]++;
        break;
      case "recurrenceinput_yearly_options":
        _$jscoverage['jquery.recurrenceinput.js'][656]++;
        var yearly_type = "DAY_OF_MONTH";
        _$jscoverage['jquery.recurrenceinput.js'][658]++;
        if (bymonthday) {
          _$jscoverage['jquery.recurrenceinput.js'][659]++;
          yearly_type = "DAY_OF_MONTH";
          _$jscoverage['jquery.recurrenceinput.js'][660]++;
          if ((bymonthday.indexOf(",") !== -1)) {
            _$jscoverage['jquery.recurrenceinput.js'][662]++;
            unsupported_features = true;
            _$jscoverage['jquery.recurrenceinput.js'][663]++;
            bymonthday = bymonthday.split(",")[0];
          }
          _$jscoverage['jquery.recurrenceinput.js'][665]++;
          field.find("select[name=recurrenceinput_yearly_day_of_month]").val(bymonth);
          _$jscoverage['jquery.recurrenceinput.js'][666]++;
          field.find("select[name=recurrenceinput_yearly_day_of_month_index]").val(bymonthday);
        }
        _$jscoverage['jquery.recurrenceinput.js'][669]++;
        if (byday) {
          _$jscoverage['jquery.recurrenceinput.js'][670]++;
          yearly_type = "WEEKDAY_OF_MONTH";
          _$jscoverage['jquery.recurrenceinput.js'][672]++;
          if ((byday.indexOf(",") !== -1)) {
            _$jscoverage['jquery.recurrenceinput.js'][674]++;
            unsupported_features = true;
            _$jscoverage['jquery.recurrenceinput.js'][675]++;
            byday = byday.split(",")[0];
          }
          _$jscoverage['jquery.recurrenceinput.js'][677]++;
          index = byday.slice(0, -2);
          _$jscoverage['jquery.recurrenceinput.js'][678]++;
          weekday = byday.slice(-2);
          _$jscoverage['jquery.recurrenceinput.js'][679]++;
          field.find("select[name=recurrenceinput_yearly_weekday_of_month_index]").val(index);
          _$jscoverage['jquery.recurrenceinput.js'][680]++;
          field.find("select[name=recurrenceinput_yearly_weekday_of_month_day]").val(weekday);
          _$jscoverage['jquery.recurrenceinput.js'][681]++;
          field.find("select[name=recurrenceinput_yearly_weekday_of_month_month]").val(bymonth);
        }
        _$jscoverage['jquery.recurrenceinput.js'][684]++;
        selectors = field.find("input[name=recurrenceinput_yearly_type]");
        _$jscoverage['jquery.recurrenceinput.js'][685]++;
        for (index = 0; (index < selectors.length); (index++)) {
          _$jscoverage['jquery.recurrenceinput.js'][686]++;
          radiobutton = selectors[index];
          _$jscoverage['jquery.recurrenceinput.js'][687]++;
          $(radiobutton).attr("checked", (radiobutton.value === yearly_type));
}
        _$jscoverage['jquery.recurrenceinput.js'][689]++;
        break;
      case "recurrenceinput_range_options":
        _$jscoverage['jquery.recurrenceinput.js'][692]++;
        var range_type = "NO_END_DATE";
        _$jscoverage['jquery.recurrenceinput.js'][694]++;
        if (count) {
          _$jscoverage['jquery.recurrenceinput.js'][695]++;
          range_type = "BY_OCCURRENCES";
          _$jscoverage['jquery.recurrenceinput.js'][696]++;
          field.find("input[name=recurrenceinput_range_by_occurrences_value]").val(count);
        }
        _$jscoverage['jquery.recurrenceinput.js'][699]++;
        if (until) {
          _$jscoverage['jquery.recurrenceinput.js'][700]++;
          range_type = "BY_END_DATE";
          _$jscoverage['jquery.recurrenceinput.js'][701]++;
          input = field.find("input[name=recurrenceinput_range_by_end_date_calendar]");
          _$jscoverage['jquery.recurrenceinput.js'][702]++;
          year = until.slice(0, 4);
          _$jscoverage['jquery.recurrenceinput.js'][703]++;
          month = until.slice(4, 6);
          _$jscoverage['jquery.recurrenceinput.js'][704]++;
          if ((month[0] === "0")) {
            _$jscoverage['jquery.recurrenceinput.js'][705]++;
            month = month[1];
          }
          _$jscoverage['jquery.recurrenceinput.js'][707]++;
          month = (parseInt(month, 10) - 1);
          _$jscoverage['jquery.recurrenceinput.js'][708]++;
          day = until.slice(6, 8);
          _$jscoverage['jquery.recurrenceinput.js'][709]++;
          input.data("dateinput").setValue(year, month, day);
        }
        _$jscoverage['jquery.recurrenceinput.js'][712]++;
        selectors = field.find("input[name=recurrenceinput_range_type]");
        _$jscoverage['jquery.recurrenceinput.js'][713]++;
        for (index = 0; (index < selectors.length); (index++)) {
          _$jscoverage['jquery.recurrenceinput.js'][714]++;
          radiobutton = selectors[index];
          _$jscoverage['jquery.recurrenceinput.js'][715]++;
          $(radiobutton).attr("checked", (radiobutton.value === range_type));
}
        _$jscoverage['jquery.recurrenceinput.js'][717]++;
        break;
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][721]++;
    if (unsupported_features) {
      _$jscoverage['jquery.recurrenceinput.js'][722]++;
      alert(conf.i18n.no_template_match);
    }
}
  _$jscoverage['jquery.recurrenceinput.js'][730]++;
  function RecurrenceInput(conf, textarea) {
    _$jscoverage['jquery.recurrenceinput.js'][732]++;
    var self = this;
    _$jscoverage['jquery.recurrenceinput.js'][733]++;
    var form, display, overlay_conf;
    _$jscoverage['jquery.recurrenceinput.js'][736]++;
    $.extend(conf, {order_indexes: ["+1", "+2", "+3", "+4", "-1"], weekdays: ["MO", "TU", "WE", "TH", "FR", "SA", "SU"]});
    _$jscoverage['jquery.recurrenceinput.js'][743]++;
    function display_fields(selector) {
      _$jscoverage['jquery.recurrenceinput.js'][744]++;
      var i;
      _$jscoverage['jquery.recurrenceinput.js'][746]++;
      form.find(".recurrenceinput_field").hide();
      _$jscoverage['jquery.recurrenceinput.js'][748]++;
      var value = selector.val();
      _$jscoverage['jquery.recurrenceinput.js'][749]++;
      if (value) {
        _$jscoverage['jquery.recurrenceinput.js'][750]++;
        var rtemplate = conf.rtemplate[value];
        _$jscoverage['jquery.recurrenceinput.js'][751]++;
        for (i = 0; (i < rtemplate.fields.length); (i++)) {
          _$jscoverage['jquery.recurrenceinput.js'][752]++;
          form.find(("#" + rtemplate.fields[i])).show();
}
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][757]++;
    function occurrenceExclude(event) {
      _$jscoverage['jquery.recurrenceinput.js'][758]++;
      event.preventDefault();
      _$jscoverage['jquery.recurrenceinput.js'][759]++;
      this.className = "exdate";
      _$jscoverage['jquery.recurrenceinput.js'][760]++;
      form.ical.EXDATE.push(this.attributes.date.value);
      _$jscoverage['jquery.recurrenceinput.js'][761]++;
      $(this).unbind(event);
      _$jscoverage['jquery.recurrenceinput.js'][762]++;
      $(this).click(occurrenceInclude);
}
    _$jscoverage['jquery.recurrenceinput.js'][765]++;
    function occurrenceInclude(event) {
      _$jscoverage['jquery.recurrenceinput.js'][766]++;
      event.preventDefault();
      _$jscoverage['jquery.recurrenceinput.js'][767]++;
      this.className = "rrule";
      _$jscoverage['jquery.recurrenceinput.js'][768]++;
      form.ical.EXDATE.splice(form.ical.EXDATE.indexOf(this.attributes.date.value), 1);
      _$jscoverage['jquery.recurrenceinput.js'][769]++;
      $(this).unbind(event);
      _$jscoverage['jquery.recurrenceinput.js'][770]++;
      $(this).click(occurrenceExclude);
}
    _$jscoverage['jquery.recurrenceinput.js'][773]++;
    function occurrenceDelete(event) {
      _$jscoverage['jquery.recurrenceinput.js'][774]++;
      event.preventDefault();
      _$jscoverage['jquery.recurrenceinput.js'][775]++;
      this.className = "exdate";
      _$jscoverage['jquery.recurrenceinput.js'][776]++;
      form.ical.RDATE.splice(form.ical.EXDATE.indexOf(this.attributes.date.value), 1);
      _$jscoverage['jquery.recurrenceinput.js'][777]++;
      $(this).parent().parent().hide("slow");
}
    _$jscoverage['jquery.recurrenceinput.js'][782]++;
    function loadOccurrences(start_date, rfc5545, start, readonly) {
      _$jscoverage['jquery.recurrenceinput.js'][783]++;
      var date, occurrence_div;
      _$jscoverage['jquery.recurrenceinput.js'][785]++;
      if ((conf.ajaxURL === null)) {
        _$jscoverage['jquery.recurrenceinput.js'][786]++;
        return;
      }
      _$jscoverage['jquery.recurrenceinput.js'][789]++;
      if ((! readonly)) {
        _$jscoverage['jquery.recurrenceinput.js'][790]++;
        element = form;
      }
      else {
        _$jscoverage['jquery.recurrenceinput.js'][792]++;
        element = display;
      }
      _$jscoverage['jquery.recurrenceinput.js'][795]++;
      occurrence_div = element.find(".recurrenceinput_occurrences");
      _$jscoverage['jquery.recurrenceinput.js'][796]++;
      occurrence_div.hide();
      _$jscoverage['jquery.recurrenceinput.js'][799]++;
      $.ajax({url: conf.ajaxURL, async: true, type: "post", dataType: "json", data: {year: start_date.getFullYear(), month: (start_date.getMonth() + 1), day: start_date.getDate(), rrule: rfc5545, format: conf.i18n.long_date_format, start: start}, success: (function (data, status, jqXHR) {
  _$jscoverage['jquery.recurrenceinput.js'][811]++;
  var result, element;
  _$jscoverage['jquery.recurrenceinput.js'][813]++;
  if ((! readonly)) {
    _$jscoverage['jquery.recurrenceinput.js'][814]++;
    element = form;
  }
  else {
    _$jscoverage['jquery.recurrenceinput.js'][816]++;
    element = display;
  }
  _$jscoverage['jquery.recurrenceinput.js'][818]++;
  data.readOnly = readonly;
  _$jscoverage['jquery.recurrenceinput.js'][819]++;
  result = $.tmpl("occurrence_tmpl", data);
  _$jscoverage['jquery.recurrenceinput.js'][820]++;
  occurrence_div = element.find(".recurrenceinput_occurrences");
  _$jscoverage['jquery.recurrenceinput.js'][821]++;
  occurrence_div.replaceWith(result);
  _$jscoverage['jquery.recurrenceinput.js'][824]++;
  element.find(".recurrenceinput_occurrences .batching a").click((function (event) {
  _$jscoverage['jquery.recurrenceinput.js'][826]++;
  event.preventDefault();
  _$jscoverage['jquery.recurrenceinput.js'][827]++;
  loadOccurrences(start_date, rfc5545, this.attributes.start.value, readonly);
}));
  _$jscoverage['jquery.recurrenceinput.js'][832]++;
  if ((! readonly)) {
    _$jscoverage['jquery.recurrenceinput.js'][833]++;
    element.find(".recurrenceinput_occurrences .action a.rrule").click(occurrenceExclude);
    _$jscoverage['jquery.recurrenceinput.js'][834]++;
    element.find(".recurrenceinput_occurrences .action a.exdate").click(occurrenceInclude);
    _$jscoverage['jquery.recurrenceinput.js'][835]++;
    element.find(".recurrenceinput_occurrences .action a.rdate").click(occurrenceDelete);
  }
  _$jscoverage['jquery.recurrenceinput.js'][838]++;
  element.find(".recurrenceinput_occurrences").show();
}), error: (function (jqXHR, textStatus, errorThrown) {
  _$jscoverage['jquery.recurrenceinput.js'][841]++;
  alert(textStatus);
})});
}
    _$jscoverage['jquery.recurrenceinput.js'][846]++;
    function findStartDate() {
      _$jscoverage['jquery.recurrenceinput.js'][847]++;
      var start_field, start_date;
      _$jscoverage['jquery.recurrenceinput.js'][849]++;
      if (conf.startField) {
        _$jscoverage['jquery.recurrenceinput.js'][851]++;
        start_field = $(conf.startField);
        _$jscoverage['jquery.recurrenceinput.js'][852]++;
        if ((! start_field.length)) {
          _$jscoverage['jquery.recurrenceinput.js'][854]++;
          start_field = $(("input[id=" + conf.startField + "]"));
        }
        _$jscoverage['jquery.recurrenceinput.js'][858]++;
        start_date = start_field.data("dateinput");
        _$jscoverage['jquery.recurrenceinput.js'][859]++;
        if ((start_date === null)) {
          _$jscoverage['jquery.recurrenceinput.js'][861]++;
          start_date = start_field.val();
        }
        else {
          _$jscoverage['jquery.recurrenceinput.js'][864]++;
          start_date = start_date.getValue();
        }
        _$jscoverage['jquery.recurrenceinput.js'][866]++;
        start_date = new Date(start_date);
        _$jscoverage['jquery.recurrenceinput.js'][868]++;
        if (isNaN(start_date)) {
          _$jscoverage['jquery.recurrenceinput.js'][869]++;
          return null;
        }
        _$jscoverage['jquery.recurrenceinput.js'][871]++;
        return start_date;
      }
      _$jscoverage['jquery.recurrenceinput.js'][873]++;
      return null;
}
    _$jscoverage['jquery.recurrenceinput.js'][877]++;
    function loadData(rfc5545) {
      _$jscoverage['jquery.recurrenceinput.js'][878]++;
      var selector, format, start_field, start_date, dayindex, day;
      _$jscoverage['jquery.recurrenceinput.js'][880]++;
      start_date = findStartDate();
      _$jscoverage['jquery.recurrenceinput.js'][882]++;
      if ((start_date !== null)) {
        _$jscoverage['jquery.recurrenceinput.js'][884]++;
        form.find("select[name=recurrenceinput_monthly_day_of_month_day]").val(start_date.getDate());
        _$jscoverage['jquery.recurrenceinput.js'][885]++;
        dayindex = conf.order_indexes[Math.floor(((start_date.getDate() - 1) / 7))];
        _$jscoverage['jquery.recurrenceinput.js'][886]++;
        day = conf.weekdays[(start_date.getDay() - 1)];
        _$jscoverage['jquery.recurrenceinput.js'][887]++;
        form.find("select[name=recurrenceinput_monthly_weekday_of_month_index]").val(dayindex);
        _$jscoverage['jquery.recurrenceinput.js'][888]++;
        form.find("select[name=recurrenceinput_monthly_weekday_of_month]").val(day);
        _$jscoverage['jquery.recurrenceinput.js'][890]++;
        form.find("select[name=recurrenceinput_yearly_day_of_month]").val((start_date.getMonth() + 1));
        _$jscoverage['jquery.recurrenceinput.js'][891]++;
        form.find("select[name=recurrenceinput_yearly_day_of_month_index]").val(start_date.getDate());
        _$jscoverage['jquery.recurrenceinput.js'][892]++;
        form.find("select[name=recurrenceinput_yearly_weekday_of_month_index]").val(dayindex);
        _$jscoverage['jquery.recurrenceinput.js'][893]++;
        form.find("select[name=recurrenceinput_yearly_weekday_of_month_day]").val(day);
        _$jscoverage['jquery.recurrenceinput.js'][894]++;
        form.find("select[name=recurrenceinput_yearly_weekday_of_month_month]").val((start_date.getMonth() + 1));
        _$jscoverage['jquery.recurrenceinput.js'][897]++;
        loadOccurrences(start_date, rfc5545, 0, false);
        _$jscoverage['jquery.recurrenceinput.js'][900]++;
        form.find("a.recurrenceinput_refresh_button").click((function (event) {
  _$jscoverage['jquery.recurrenceinput.js'][902]++;
  event.preventDefault();
  _$jscoverage['jquery.recurrenceinput.js'][903]++;
  loadOccurrences(start_date, widget_save_to_rfc5545(form, conf, false).result, 0, false);
}));
      }
      _$jscoverage['jquery.recurrenceinput.js'][912]++;
      if (rfc5545) {
        _$jscoverage['jquery.recurrenceinput.js'][913]++;
        widget_load_from_rfc5545(form, conf, rfc5545);
        _$jscoverage['jquery.recurrenceinput.js'][915]++;
        display.find("input[name=recurrenceinput_checkbox]").attr("checked", true);
      }
      _$jscoverage['jquery.recurrenceinput.js'][919]++;
      selector = form.find("select[name=recurrenceinput_rtemplate]");
      _$jscoverage['jquery.recurrenceinput.js'][920]++;
      display_fields(selector);
}
    _$jscoverage['jquery.recurrenceinput.js'][923]++;
    function recurrenceOn() {
      _$jscoverage['jquery.recurrenceinput.js'][924]++;
      var RFC5545 = widget_save_to_rfc5545(form, conf, true);
      _$jscoverage['jquery.recurrenceinput.js'][925]++;
      var label = display.find("label[class=recurrenceinput_display]");
      _$jscoverage['jquery.recurrenceinput.js'][926]++;
      label.text((conf.i18n.display_label_activate + " " + RFC5545.description));
      _$jscoverage['jquery.recurrenceinput.js'][927]++;
      textarea.val(RFC5545.result);
      _$jscoverage['jquery.recurrenceinput.js'][928]++;
      start_date = findStartDate();
      _$jscoverage['jquery.recurrenceinput.js'][929]++;
      if ((start_date !== null)) {
        _$jscoverage['jquery.recurrenceinput.js'][930]++;
        loadOccurrences(start_date, textarea.val(), 0, true);
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][934]++;
    function recurrenceOff() {
      _$jscoverage['jquery.recurrenceinput.js'][935]++;
      var label = display.find("label[class=recurrenceinput_display]");
      _$jscoverage['jquery.recurrenceinput.js'][936]++;
      label.text(conf.i18n.display_label_unactivate);
      _$jscoverage['jquery.recurrenceinput.js'][937]++;
      textarea.val("");
      _$jscoverage['jquery.recurrenceinput.js'][938]++;
      display.find(".recurrenceinput_occurrences").hide();
}
    _$jscoverage['jquery.recurrenceinput.js'][941]++;
    function toggleRecurrence(e) {
      _$jscoverage['jquery.recurrenceinput.js'][942]++;
      var checkbox = display.find("input[name=recurrenceinput_checkbox]");
      _$jscoverage['jquery.recurrenceinput.js'][943]++;
      if (checkbox.is(":checked")) {
        _$jscoverage['jquery.recurrenceinput.js'][944]++;
        recurrenceOn();
      }
      else {
        _$jscoverage['jquery.recurrenceinput.js'][946]++;
        recurrenceOff();
      }
}
    _$jscoverage['jquery.recurrenceinput.js'][950]++;
    function save(event) {
      _$jscoverage['jquery.recurrenceinput.js'][951]++;
      event.preventDefault();
      _$jscoverage['jquery.recurrenceinput.js'][953]++;
      form.overlay().close();
      _$jscoverage['jquery.recurrenceinput.js'][955]++;
      display.find("input[name=recurrenceinput_checkbox]").attr("checked", true);
      _$jscoverage['jquery.recurrenceinput.js'][957]++;
      recurrenceOn();
}
    _$jscoverage['jquery.recurrenceinput.js'][960]++;
    function cancel(event) {
      _$jscoverage['jquery.recurrenceinput.js'][961]++;
      event.preventDefault();
      _$jscoverage['jquery.recurrenceinput.js'][963]++;
      form.overlay().close();
}
    _$jscoverage['jquery.recurrenceinput.js'][971]++;
    if (($.template.recurrenceinput_display === undefined)) {
      _$jscoverage['jquery.recurrenceinput.js'][972]++;
      $.ajax({url: $(conf.template.display)[0].src, async: false, success: (function (data) {
  _$jscoverage['jquery.recurrenceinput.js'][976]++;
  conf.template.display = data;
}), error: (function (request, status, error) {
  _$jscoverage['jquery.recurrenceinput.js'][979]++;
  alert((error.message + ": " + error.filename));
})});
      _$jscoverage['jquery.recurrenceinput.js'][982]++;
      $(conf.template.display).template("recurrenceinput_display");
    }
    _$jscoverage['jquery.recurrenceinput.js'][984]++;
    display = $.tmpl("recurrenceinput_display", conf);
    _$jscoverage['jquery.recurrenceinput.js'][987]++;
    if (($.template.recurrenceinput_form === undefined)) {
      _$jscoverage['jquery.recurrenceinput.js'][988]++;
      $.ajax({url: $(conf.template.form)[0].src, async: false, success: (function (data) {
  _$jscoverage['jquery.recurrenceinput.js'][992]++;
  conf.template.form = data;
}), error: (function (request, status, error) {
  _$jscoverage['jquery.recurrenceinput.js'][995]++;
  alert((error.message + ": " + error.filename));
})});
      _$jscoverage['jquery.recurrenceinput.js'][998]++;
      $(conf.template.form).template("recurrenceinput_form");
    }
    _$jscoverage['jquery.recurrenceinput.js'][1000]++;
    form = $.tmpl("recurrenceinput_form", conf);
    _$jscoverage['jquery.recurrenceinput.js'][1002]++;
    overlay_conf = $.extend(conf.form_overlay, {});
    _$jscoverage['jquery.recurrenceinput.js'][1004]++;
    form.overlay().hide();
    _$jscoverage['jquery.recurrenceinput.js'][1007]++;
    form.find("input[name=recurrenceinput_range_by_end_date_calendar]").dateinput({selectors: true, format: conf.i18n.short_date_format});
    _$jscoverage['jquery.recurrenceinput.js'][1012]++;
    if (textarea.val()) {
      _$jscoverage['jquery.recurrenceinput.js'][1013]++;
      widget_load_from_rfc5545(form, conf, textarea.val());
      _$jscoverage['jquery.recurrenceinput.js'][1014]++;
      recurrenceOn();
    }
    _$jscoverage['jquery.recurrenceinput.js'][1022]++;
    display.find("input[name=recurrenceinput_checkbox]").click(toggleRecurrence);
    _$jscoverage['jquery.recurrenceinput.js'][1025]++;
    display.find("a[name=recurrenceinput_edit]").click((function (e) {
  _$jscoverage['jquery.recurrenceinput.js'][1028]++;
  loadData(textarea.val());
  _$jscoverage['jquery.recurrenceinput.js'][1029]++;
  e.preventDefault();
  _$jscoverage['jquery.recurrenceinput.js'][1030]++;
  form.overlay().load();
}));
    _$jscoverage['jquery.recurrenceinput.js'][1035]++;
    form.find("select[name=recurrenceinput_rtemplate]").change((function (e) {
  _$jscoverage['jquery.recurrenceinput.js'][1037]++;
  display_fields($(this));
}));
    _$jscoverage['jquery.recurrenceinput.js'][1042]++;
    form.find("select").change((function (e) {
  _$jscoverage['jquery.recurrenceinput.js'][1044]++;
  $(this).parent().find("> input").click().change();
}));
    _$jscoverage['jquery.recurrenceinput.js'][1051]++;
    form.find(".recurrenceinput_cancel_button").click(cancel);
    _$jscoverage['jquery.recurrenceinput.js'][1052]++;
    form.find(".recurrenceinput_save_button").click(save);
    _$jscoverage['jquery.recurrenceinput.js'][1058]++;
    $.extend(self, {display: display, form: form, loadData: loadData, save: save});
}
  _$jscoverage['jquery.recurrenceinput.js'][1071]++;
  $.fn.recurrenceinput = (function (conf) {
  _$jscoverage['jquery.recurrenceinput.js'][1072]++;
  if (this.data("recurrenceinput")) {
    _$jscoverage['jquery.recurrenceinput.js'][1074]++;
    return this.data("recurrenceinput");
  }
  _$jscoverage['jquery.recurrenceinput.js'][1078]++;
  var config = $.extend({}, tool.conf);
  _$jscoverage['jquery.recurrenceinput.js'][1079]++;
  $.extend(config, conf);
  _$jscoverage['jquery.recurrenceinput.js'][1080]++;
  $.extend(config, {i18n: LABELS[config.lang], name: this.attr("name")});
  _$jscoverage['jquery.recurrenceinput.js'][1083]++;
  var recurrenceinput = new RecurrenceInput(config, this);
  _$jscoverage['jquery.recurrenceinput.js'][1085]++;
  recurrenceinput.form.appendTo("body");
  _$jscoverage['jquery.recurrenceinput.js'][1086]++;
  this.after(recurrenceinput.display);
  _$jscoverage['jquery.recurrenceinput.js'][1088]++;
  if (this.val()) {
    _$jscoverage['jquery.recurrenceinput.js'][1089]++;
    recurrenceinput.display.find("input[name=recurrenceinput_checkbox]").attr("checked", true);
  }
  _$jscoverage['jquery.recurrenceinput.js'][1095]++;
  this.hide();
  _$jscoverage['jquery.recurrenceinput.js'][1098]++;
  this.data("recurrenceinput", recurrenceinput);
  _$jscoverage['jquery.recurrenceinput.js'][1099]++;
  return recurrenceinput;
});
})(jQuery);
